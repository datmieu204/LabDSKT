id: SP:4a229c3e1ad1f52ed70519ec55aca5fb1cfc4135
title: Analysis of join-the-shortest-queue routing for web server farms
authors: [{'affiliations': [], 'name': 'Varun Guptaa'}, {'affiliations': [], 'name': 'Mor Harchol Baltera'}, {'affiliations': [], 'name': 'Karl Sigmanb'}, {'affiliations': [], 'name': 'Ward Whittb'}]
abstractText: Join the Shortest Queue (JSQ) is a popular routing policy for server farms. However, until now all analysis of JSQ has been limited to First-Come-First-Serve (FCFS) server farms, whereas it is known that web server farms are better modeled as Processor Sharing (PS) server farms. We provide the first approximate analysis of JSQ in the PS server farm model for general job-size distributions, obtaining the distribution of queue length at each queue. To do this, we approximate the queue length of each queue in the server farm by a one-dimensional Markov chain, in a novel fashion. We also discover some interesting insensitivity properties of PS server farms with JSQ routing, and discuss the near-optimality of JSQ. c © 2007 Elsevier B.V. All rights reserved.
references: [{'authors': ['I.J.B.F. Adan', 'G.J. van Houtum', 'J. van der Wal'], 'title': 'Upper and lower bounds for the waiting time in the symmetric shortest queue system, Ann', 'venue': 'Oper. Res', 'year': 1994}, {'authors': ['I.J.B.F. Adan', 'J. Wessels', 'W.H.M. Zijm'], 'title': 'Analysis of the symmetric shortest queue problem', 'venue': 'Stoch. Models 6 ', 'year': 1990}, {'authors': ['I.J.B.F. Adan', 'J. Wessels', 'W.H.M. Zijm'], 'title': 'Matrix-geometric analysis of the shortest queue problem with threshold jockeying', 'venue': 'Oper. Res. Lett. 13 ', 'year': 1993}, {'authors': ['P. Barford', 'M.E. Crovella'], 'title': 'Generating representative Web workloads for network and server performance evaluation, in: Proceedings of Performance ’98/SIGMETRICS’98', 'year': 1998}, {'authors': ['F. Bonomi'], 'title': 'On job assignment for a parallel system of processor sharing queues', 'venue': 'IEEE Trans. Comput. 39 (7) ', 'year': 1990}, {'authors': ['O.J. Boxma', 'J.W. Cohen'], 'title': 'Boundary Value Problems in Queueing System Analysis', 'venue': 'North Holland, Amsterdam', 'year': 1983}, {'authors': ['P. Brémaud'], 'title': 'Point Processes and Queues', 'venue': 'Springer-Verlag, New York', 'year': 1981}, {'authors': ['B.W. Conolly'], 'title': 'The autostrada queueing problem', 'venue': 'J. Appl. Probab. 21 ', 'year': 1984}, {'authors': ['M. Crovella', 'M. Harchol-Balter', 'C. Murta'], 'title': 'On choosing a task assignment policy for a distributed server system', 'venue': 'J. Parallel Distrib. Comput. 59 (2) ', 'year': 1999}, {'authors': ['M.E. Crovella', 'A. Bestavros'], 'title': 'Self-similarity in World Wide Web traffic: Evidence and possible causes', 'venue': 'in: Proceedings of the 1996 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems,', 'year': 1996}, {'authors': ['D. Daley', 'D. Vere-Jones'], 'title': 'An Introduction to the Theory of Point Processes', 'venue': 'Springer, New York', 'year': 1988}, {'authors': ['M. El-Taha'], 'title': 'Shaler Stidham', 'venue': 'Sample-Path Analysis of Queueing System, Kluwer, Boston', 'year': 1999}, {'authors': ['A. Ephremides', 'P. Varaiya', 'J. Walrand'], 'title': 'A simple dynamic routing problem', 'venue': 'IEEE Trans. Automat. Control AC-25 (4) ', 'year': 1980}, {'authors': ['L. Flatto', 'H.P. McKean'], 'title': 'Two queues in parallel', 'venue': 'Comm. Pure Appl. Math. 30 ', 'year': 1977}, {'authors': ['G. Foschini', 'J. Salz'], 'title': 'A basic dynamic routing problem and diffusion', 'venue': 'IEEE Trans. Commun. 26 (3) ', 'year': 1978}, {'authors': ['W.K. Grassmann'], 'title': 'Transient and steady state results for two parallel queues', 'venue': 'Omega 8 ', 'year': 1980}, {'authors': ['M. Harchol-Balter'], 'title': 'Task assignment with unknown duration', 'venue': 'J. ACM 49 (2) ', 'year': 2002}, {'authors': ['M. Harchol-Balter', 'B. Schroeder', 'N. Bansal', 'M. Agrawal'], 'title': 'Size-based scheduling to improve web performance', 'venue': 'ACM Trans. Comput. Syst. 21 (2) ', 'year': 2003}, {'authors': ['F.P. Kelly'], 'title': 'Reversibility and Stochastic Networks', 'venue': 'Wiley, Chichester', 'year': 1979}, {'authors': ['J.F.C. Kingman'], 'title': 'Two similar queues in parallel', 'venue': 'Biometrika 48 ', 'year': 1961}, {'authors': ['C. Knessl', 'B.J. Matkowsky', 'Z. Schuss', 'C. Tier'], 'title': 'Two parallel M /G/1 queues where arrivals join the system with the smaller buffer content', 'venue': 'IEEE Trans. Commun. 35 (11) ', 'year': 1987}, {'authors': ['H.C. Lin', 'C.S. Raghavendra'], 'title': 'An analysis of the join the shortest queue (JSQ) policy', 'venue': 'in: Proc. 12th Int’l Conf. Distributed Computing Systems', 'year': 1992}, {'authors': ['J.C.S. Lui', 'R.R. Muntz', 'D.F. Towsley'], 'title': 'Bounding the mean response time of the minimum expected delay routing policy: An algorithmic approach', 'venue': 'IEEE Trans. Comput. 44 (12) ', 'year': 1995}, {'authors': ['R.D. Nelson', 'T.K. Philips'], 'title': 'An approximation to the response time for shortest queue routing', 'venue': 'ACM Perform. Eval. Review 17 ', 'year': 1989}, {'authors': ['B.M. Rao', 'M.J.M. Posner'], 'title': 'Algorithmic and approximation analyses of the shorter queue model', 'venue': 'Naval Res. Logist. 34 ', 'year': 1987}, {'authors': ['R.W. Weber'], 'title': 'On optimal assignment of customers to parallel servers', 'venue': 'J. Appl. Probab. 15 ', 'year': 1978}, {'authors': ['W. Whitt'], 'title': 'Comparison conjectures about the M /G/s queue', 'venue': 'Oper. Res. Lett. 2 (5) ', 'year': 1983}, {'authors': ['W. Whitt'], 'title': 'Heavy-traffic limits for the G/H2*/n/m queue', 'venue': 'Math. Oper. Res. 30 (1) ', 'year': 2005}]
sections: [{'text': 'Join the Shortest Queue (JSQ) is a popular routing policy for server farms. However, until now all analysis of JSQ has been limited to First-Come-First-Serve (FCFS) server farms, whereas it is known that web server farms are better modeled as Processor Sharing (PS) server farms. We provide the first approximate analysis of JSQ in the PS server farm model for general job-size distributions, obtaining the distribution of queue length at each queue. To do this, we approximate the queue length of each queue in the server farm by a one-dimensional Markov chain, in a novel fashion. We also discover some interesting insensitivity properties of PS server farms with JSQ routing, and discuss the near-optimality of JSQ. c© 2007 Elsevier B.V. All rights reserved.\nKeywords: Shortest queue routing; JSQ; Processor sharing; Insensitivity; Single-queue approximation'}, {'heading': '1. Introduction', 'text': ''}, {'heading': '1.1. Motivation', 'text': 'The server farm is a popular architecture of computing centers. A server farm consists of a front-end router/dispatcher which receives all the incoming requests (jobs), and dispatches each job to one of a collection of servers which do the actual processing. The dispatcher employs a routing policy (also called a “task assignment policy”, or TAP), which decides when and to which server an incoming request should be routed. Server farms afford low cost (many slow servers are cheaper than one fast server), high scalability (it is easy to add and remove servers) and high reliability (failure of individual servers does not bring the whole system down). One of the most important design goals of a server farm is choosing a routing policy which will yield low response times; the response time is the time from the arrival of a request to its completion.\nWe are motivated by web server farm architectures serving static requests. Requests for files (or HTTP pages) arrive at a front-end dispatcher. The dispatcher then immediately routes the request to one of the servers in the farm for processing using a routing policy. It is important that the dispatcher does not hold back the arriving connection request, or the client will time out and possibly submit more requests. The bottleneck resource at a web server is often the uplink bandwidth. This bandwidth is shared by all files requested in a round-robin manner with a small granularity,\n∗ Corresponding author. E-mail address: harchol@cs.cmu.edu (M. Harchol Balter).\n0166-5316/$ - see front matter c© 2007 Elsevier B.V. All rights reserved. doi:10.1016/j.peva.2007.06.012\nwhich is well-modeled by the idealized processor sharing (PS) scheduling policy [18]. Under PS scheduling, the server splits its capacity equally over the requests it is processing, giving an equal share of its capacity to each of the current requests at every instant of time. We are thus interested in a PS server farm with immediate dispatch. Time sharing servers are beneficial in that they allow “short jobs” to get processed quickly, without being stuck waiting behind long jobs. This is particularly important, since measurements have shown that requested files’ sizes, and the associated service requirements, are highly variable, (e.g., heavy-tailed [4,10]).\nThe Join-the-Shortest-Queue (JSQ) routing policy is the most popular routing policy used in PS server farms today; e.g., it is used in Cisco Local Director, IBM Network Dispatcher, Microsoft Sharepoint and F5 Labs BIG/IP. Under JSQ, an incoming request is routed to the server with the least number of unfinished requests. Thus, JSQ strives to balance load across the servers, reducing the probability of one server having several jobs while another server sits idle. From the point of view of a new arrival, it is a greedy policy for the case of PS servers, because the arrival would prefer sharing a server with as few jobs as possible. We refer to a PS server farm with JSQ routing as a JSQ/PS server farm.'}, {'heading': '1.2. Model and notation', 'text': 'We model the arrival process of jobs as a stationary Poisson process.1 We assume that there is a single dispatcher (router) and K identical PS servers with unlimited waiting space, as depicted in Fig. 1. We assume that routing is immediate using the JSQ policy. Ties are broken by randomly choosing (with equal probabilities) among the servers with the fewest jobs. No jockeying is allowed between the servers (once a job is dispatched to a server, it stays there until completion). A job’s size (service requirement) is defined as the time taken by a job to run on a server in isolation.\nConsequently, the JSQ/PS server farm acts as an M /G/K /JSQ/PS queueing model, with JSQ denoting the policy used to route arrivals to the servers and PS denoting the scheduling rule (service discipline) used by each server. Jobs arrive as a Poisson stream (the M) with rate λ and are routed immediately to one of the K servers with the fewest jobs. The service requirements are drawn independently from a general distribution with mean µ−1 (the G) and service is performed at each server according to PS. We define the load of this system, ρ, as the per-server load ρ = λ/(Kµ). We sometimes use the extra notation M(λ)/G(µ)/K /JSQ/PS to denote that the average arrival rate is λ and the mean job size is µ−1. We will use N to denote the random variable for the queue length of a single PS queue in the server farm.\n1 This is consistent with measurements, except that measurements invariably show that the arrival rate varies strongly by time of day. However, in the short time scale over which we analyze performance (say, minutes), the arrival rate usually can be regarded as constant. The request pattern of individual users is typically far from Poisson, but as in many applications, a Poisson arrival process becomes justified because the overall arrival process is the superposition of relatively sparse arrival processes from many nearly independent users. We can then invoke the classical limit theorem establishing convergence to the Poisson process, as in Proposition 9.2.VII on p. 285 of Daley and Vere-Jones [11].'}, {'heading': '1.3. Contributions/outline', 'text': 'Despite the ubiquity of JSQ/PS server farms, no one has yet analyzed the performance of JSQ in this setting. The existing analysis of JSQ involves First-Come-First-Serve (FCFS) server farms, where the servers employ FCFS scheduling. Within the JSQ/FCFS setting, almost all analysis is restricted to 2 servers, often with exponentiallydistributed job sizes. For more than 2 servers, while some very appealing approximations exist, the accuracy of those approximations decreases as the number of servers is increased or as the job-size distribution becomes more variable. Prior work is detailed in Section 2.\nIn this paper we provide the first analysis of the JSQ/PS model. In particular, we provide a way to calculate the approximate steady-state distribution of queue length (number of jobs in the system) at any server, which also yields the mean response time via Little’s Law. While our analysis is approximate, the accuracy of our approximation is extremely good: <3% error for mean response time and only slightly more for the second moment of queue length. More importantly, the error does not seem to increase beyond 3% with increased numbers of servers, or with an increase in job-size variability.'}, {'heading': '1.3.1. SQA', 'text': 'We accomplish this goal in what we believe is an interesting innovative way. In Section 3 we introduce a new approximation technique for server farms, which we call the single-queue approximation (SQA). Besides being useful for JSQ/PS server farms, SQA should apply to a much larger class of multi-server systems with state-dependent routing policies. The key idea behind SQA is the following: instead of analyzing the entire multi-server model, we just concentrate on a single queue in the server farm, say queue Q, and model its behavior independently of all the other queues. To capture the effect of the other queues, without directly considering them, we model the arrival process into queue Q by a stochastic point process with state-dependent rates. In particular, we assume that the arrival process into queue Q has stochastic intensity λ(NQ(t)), where NQ(t) is the queue length of Q at time t and λ(n) is the long-run arrival rate when Q has n customers in the original multi-server model.\nWe provide strong theoretical support for SQA: In Theorem 3.1 of Section 3 we prove that SQA is in fact exact when the job-size distribution is exponential (given exact conditional arrival rates). Thus,\nM /M /K /JSQ/PS SQA ≡ Mn /M /1/PS,\nwhere equivalence denotes equivalent steady-state queue-length distributions.'}, {'heading': '1.3.2. Near-insensitivity', 'text': 'Turning to general job-size distributions, in Section 4, we investigate the sensitivity of the M /G/K /JSQ/PS to the variability of G. In Section 4.1, we prove that under a class of distributions, the degenerate hyperexponential (H∗2 ), the mean response time of a JSQ/PS server farm depends on the job-size distribution only through its mean. That is, even when the parameters of the degenerate hyperexponential are set to create very high variability, mean response time is unaffected, as we prove in Theorem 4.1. Coupled with the above equation, we now have:\nM /H∗2 /K /JSQ/PS ≡ M /M /K /JSQ/PS SQA ≡ Mn /M /1,\nwhere equivalence denotes equivalent queue-length distributions. To examine other job-size distributions, we resort to extensive simulations of a wide class of distributions, including hyperexponential distributions, Erlang distributions, Weibull distributions, the deterministic distribution and bimodal distributions (mixture of two point masses). We find, see Section 4.2, that the JSQ/PS system shows near-insensitivity to the variability of the job-size distribution. Coupled with the above equation, we now have:\nM /G/K /JSQ/PS ≈ M /M /K /JSQ/PS SQA ≡ Mn /M /1,\nwhere the approximation is quite close for at least the first two moments of queue length. In Section 4.3, we discuss intuition for the near-insensitivity of JSQ/PS server farms. First, we note that the insensitivity of the M /G/1/PS queue (which is well-known) extends also to the (state-dependent) Mn /G/1/PS queue (a less known fact). Second, we demonstrate that the conditional arrival rates—the λ(n)—are also nearly insensitive to the job-size distribution. Finally, we point out that the fact that the M /G/K /JSQ/PS server farm exhibits near-\ninsensitivity is non-trivial, since very similar routing policies for PS server farms, like Least-Work-Left (sending the job to the host with the least total work), or Round-Robin, are highly sensitive to the job-size distribution.'}, {'heading': '1.3.3. Conditional arrival rates', 'text': 'At this point, it appears that we have a method for analyzing JSQ/PS server farms with general job-size distributions: As shown in Fig. 2, we approximate the M /G/K /JSQ/PS by an M /M /K /JSQ/PS, which we prove is equivalent to an Mn /M /1, which we then solve. However, there is an important unresolved issue: We have not explained how to derive the conditional arrival rates, the λ(n)’s, into the Mn /M /1 queue. This is the subject of Section 5. To determine the λ(n)’s, we began by measuring them through extensive simulation experiments. Fortunately, we found stunning regularity in the results. We observed that λ(n) ≈ µρK for all n ≥ 3. We further support this observation by Theorem 5.1, showing that\nλ(n) µ → ρK , as n → ∞\nin the case where K = 2. Given the above observations, it suffices to determine only the three remaining parameters: λ(0), λ(1) and λ(2), which we determine using a combination of analysis and simulation. We thus obtain closedform expressions for all the conditional arrival rates λ(n) as a function of the three parameters λ, µ and K . With those formulas, we can get a closed-form solution for the queue-length distribution, since the approximating Mn /M /1 model is a repeating birth-and-death process.'}, {'heading': '1.3.4. High accuracy', 'text': 'In Section 6, we demonstrate the remarkable accuracy of our approximation method under a wide array of job-size distributions, where we use our derived conditional arrival rates λ(n). We show that our analytical approximation method is always within 2.5% of simulation estimates for mean queue length and response time, under all job-size distributions examined. Furthermore, this percentage error does not appear to increase as K is increased from 2 to 16. The maximum error only rises from 2.5% to 3.5% when we look at the second moment of queue length.'}, {'heading': '1.3.5. Where prior work fits in', 'text': 'Fig. 2 demonstrates pictorially some of the results in this paper. It is important to note that one is not forced to use the SQA approximation in the rightmost equality of Fig. 2. Once we know that: M /G/K /JSQ/PS ≈ M /M /K /JSQ/PS ≡ M /M /K /JSQ/FCFS, we can then apply any known method in the literature to solve the M /M /K /JSQ/FCFS, not just SQA. As mentioned earlier, the literature is full of methods for analyzing the M /M /K /JSQ/FCFS for the case of K = 2; even for K > 2, there are some attractive approximations by Nelson and Philips [24] or by Lin and Raghavendra [22].'}, {'heading': '1.3.6. Near-optimality of JSQ', 'text': 'We end the paper in Section 7 by presenting simulation results comparing JSQ with other routing policies in the PS server farm setting. We find that JSQ is impressively close to achieving optimality, despite using far less information about jobs than the other routing policies against which it is compared.'}, {'heading': '2. Prior work', 'text': 'We emphasize again that there has been no previous mathematical analysis of the M /G/K /JSQ/PS model. However, Bonomi [5] conducted a simulation study for the special case of two servers. He showed that, among all policies that base their decisions only on the queue lengths at the servers, JSQ minimizes the mean response time for the PS scheduling rule and exponential service requirements. Bonomi also proposed policies that improve slightly upon JSQ (5% improvement), for some general job-size distributions, by exploiting the remaining service times of jobs. He showed via simulation that common load-balancing schemes that perform well for JSQ/FCFS do not perform well for JSQ/PS. Bonomi observed that, while Least-Work-Left (LWL) is good for FCFS, it is not good for PS. However, we find that LWL is not always bad; see Fig. 7.\nIn contrast, there is a lot of work on the JSQ/FCFS model (recall that under exponential workloads, JSQ/FCFS is equivalent to JSQ/PS with respect to the stationary queue-length distribution). However, even the M /M /K /JSQ/FCFS model remains quite intractable. Several authors, including Weber [26], Winston [29], and Ephremides et al. [13], consider the optimality of JSQ for FCFS servers in certain constrained settings involving a job-size distribution with non-decreasing failure rate and various assumptions on not knowing job sizes a priori. Note, however, that JSQ is far from optimal for FCFS servers with highly-variable job sizes [9,17].\nAlmost all papers analyzing JSQ/FCFS performance are limited to 2 servers, an exponential job-size distribution and the mean response time metric. Among the classic papers are Kingman [20] and Flatto and McKean [14]. They use generating functions to derive the joint probability distribution of queue lengths and express the mean response time as an infinite sum, which in practice requires truncation to compute. Adan et al. [2] show that Kingman’s result can be derived more intuitively via the compensation approach. Approximations for the mean response time have also been obtained by state space truncation of the Markov chain [16,8,25,23]. Heavy traffic approximations for JSQ/FCFS also exist and are evaluated in [15,21]. Lastly, Boxma and Cohen [6] obtain a functional representation for the mean response time using boundary value approach. These methods are exact. However they are not always computationally efficient and do not generalize to higher values of K .\nFor analyzing JSQ/FCFS with more than K = 2 servers, again with exponential job sizes, only approximations exist. Again, the metric is mean response time. Nelson and Philips [24] use the following idea: They look at the steady-state probability of the M /M /K /FCFS queue (with a central queue) as an estimate for the total number of jobs in the JSQ/FCFS system, and then assume that the jobs in the system are divided equally (within 1) among each of the queues. Lin and Raghavendra [22] follow the approach of approximating the number of busy servers by a binomial distribution and then also assume that the jobs are equally divided among each of the queues (within 1). Both approximations are reasonably accurate. Specifically, the Nelson and Philips method demonstrates error less than 8% for K up to 16 with exponentially-distributed job sizes. They also provide an empirically obtained correction factor which drops the error to 2%. Lin and Raghavendra method yields less than 3.5% error for exponentially-distributed job sizes and K up to 64. There are also some numerical methods papers that do not lead to a closed-form solution, but are accurate and computationally efficient for not-too-large K , see for example [1,23,3].'}, {'heading': '3. The single-queue approximation (SQA)', 'text': 'To understand SQA, it helps to recall that the main obstacle in analyzing routing policies such as JSQ is that the states of all the queues are correlated, necessitating a multidimensional state space for the system. Thus exact analysis requires that we work with the vector of queue lengths and possibly also the remaining service requirements of all jobs at each server. The SQA method allows one to approximate the marginal queue-length distribution of each queue in the server farm by modeling each queue independently of the other, thereby avoiding the above difficulties.\nConsider a queue Q in the server farm. Under SQA, we model Q by a queue Q′, where the arrival rate of jobs into Q′ can depend only on the queue length of Q′, and not on the state of any other queues. Thus SQA approximates each queue of the M /G/K /JSQ/PS model by an associated Mn /G/1/PS model, where Mn denotes a state-dependent Markovian arrival process. Specifically, at time t , the arrival process acts as a Poisson process with rate λ(NQ′(t)), where NQ′(t) is the queue length of Q′ at time t and {λ(n) : n ≥ 0} is a deterministic sequence with λ(n) being the actual long-run arrival rate into queue Q (of the original server farm) conditioned on the queue length of Q being n. We define λ(n) in Definition 3.1.\nDefinition 3.1. Given a general M /G/K /R/S model, the conditional arrival rate into one designated queue Q given\nthat it has n jobs, λ(n), is defined as\nλ(n) = lim t→∞ An(t) Tn(t) , (1)\nwhere An(t) is the number of arrivals into Q during the time interval [0, t] that see n jobs at Q on arrival (excluding themselves), while Tn(t) is the total time spent by Q with n jobs during the time interval [0, t].\nFormally, the arrivals form a stochastic point process with stochastic intensity λ(NQ′(t)), as defined in Section II.3,5 in Brémaud [7].\nThe state-dependence in the arrival rate λ(n) is intended to capture some of the dependence inherent in the full M /G/K /JSQ/PS model. Consider an M /G/K /JSQ/PS model with outside arrival rate λ. The average arrival rate into each queue is λ/K . However, if we condition on the fact that some designated queue has n jobs, then the arrival rate into that designated queue is no longer λ/K . In fact, with JSQ routing, we expect that the long-term arrival rates into that designated queue, λ(n), should decrease as n increases, because it is likely that at least one other queue is shorter than the designated queue. This is precisely what happens: λ(0) is larger than λ/K , but λ(n) decreases as n increases. In this way, having state-dependent arrival rates captures some of the influence of the other queues on the designated queue.\nThe SQA approximation method is not limited to the M /G/K /JSQ/PS model we are primarily considering. We can consider other routing policiesR (see e.g., Definition 3.2) for the K -server model and other scheduling rules S at this single queue. We can also accommodate heterogeneous servers. SQA can also be defined for a more general arrival process, but its performance under general arrival processes remains to be investigated. We now specify a class of routing policies for which SQA works well.\nDefinition 3.2. A stationary queue-length-dependent routing policy is a time-stationary routing policy that uses only information about queue lengths at the servers at the instant of an arrival. The decisions may be made probabilistically, and may be biased in favor of certain servers (allowing the modeling of heterogeneous servers).\nWe now show that SQA produces the exact stationary queue-length distribution for Markovian models (when the actual arrival process is Poisson and the job sizes are independent exponential random variables with a common distribution) and the routing and scheduling rules satisfy certain regularity conditions.\nTheorem 3.1. Consider an M /M /K /R/S model, where R is any stationary queue-length-dependent routing policy, e.g., JSQ, and S is any stationary, size-independent, work-conserving scheduling policy, e.g., PS. Assume that this model has a unique proper steady-state distribution. Let Q be any particular server in the M /M /K /R/S model. Then SQA with the exact conditional arrival rates λ(n) yields the same steady-state queue-length distribution as in the original M /M /K /R/S model.\nProof. For simplicity, we will assume that K = 2, but it is easy to see that the proof can be extended to any number of servers, allowing unequal service rates. From the assumptions about the job-size distribution, the routing policy and the scheduling rule, the 2-dimensional vector of queue lengths evolves as a continuous-time Markov chain (CTMC) with stationary transition probabilities. By assumption, this CTMC has a unique steady-state distribution, where πn, j is the steady-state probability that there are n jobs at queue 1 and j jobs at queue 2 (including the jobs receiving service, if any). We will concentrate on queue 1. Let µ denote the service rate at queue 1. Let Πn denote the steadystate probability that there are n jobs at queue 1. Clearly,\nΠn = ∞∑ j=0 πn, j .\nAs above, let λ(n) denote the conditional arrival rate at queue 1 in the M/M/K/R/S model. Let Mn /M /1/S denote the SQA model for queue 1, which has state-dependent arrival rates λ(n). Let xn denote the limiting probability that there are n jobs at the single Mn /M /1/S queue with state-dependent arrival rates λ(n). Since the queue-length process in the Mn /M /1/S model is a birth-and-death process, xn is the unique solution (after normalization) to the following balance equations:\nxnλ(n) = xn+1µ, n ≥ 0. (2)\nOur goal is to prove that Πn = xn , n ≥ 0. To do this, we will show that Πn is a solution to (2).\nWe need only two observations to show this: Our first observation is that we can rewrite λ(n) as follows: Let qn, j denote the probability that the (time-stationary) routing policyR in the M/M/K/R/S model routes an incoming job to queue 1 when n and j are the number of jobs at queue 1 and 2, respectively. By definition of λ(n), we must have\nλ(n) = ∞∑ j=0 ( πn, j Πn ) · λqn, j . (3)\nOur second observation is that we can balance the rate of transitions between the set of states Sn = {(n, j) : j = 0, 1, . . .} and Sn+1 = {(n + 1, j) : j = 0, 1, . . .} in the M /M /K /R/S model as follows:\n∞∑ j=0 πn, j · λqn, j = ∞∑ j=0 πn+1, jµ. (4)\nResults of this type using conditional arrival and departure rates have been obtained previously using sample path arguments, see [12] (Theorem 1.9, Section 1.4.2, page 21). We can now easily show that Πn is a solution to (2), because\nΠnλ(n) = Πn ∞∑ j=0 ( πn, j Πn ) · λqn, j by (3)\n= ∞∑ j=0 πn, j · λqn, j = ∞∑ j=0 πn+1, jµ = Πn+1µ. by (4)'}, {'heading': '4. Insensitivity', 'text': 'In Section 3 we showed that SQA can exactly model the M /M /K /JSQ/PS system (exponential job-size distribution). We now look at general job-size distributions. We start in Section 4.1 with the case of a degenerate hyperexponential job-size distribution, and then consider more general distributions in Section 4.2. We provide some further support for SQA in Section 4.3 by observing that the insensitivity property of the M /G/1/PS extends to the Mn /G/1/PS.'}, {'heading': '4.1. Insensitivity with the degenerate hyperexponential distribution', 'text': 'In this subsection we introduce a special two-parameter family of job-size distributions for which the M /G/K /JSQ/PS model has the insensitivity property. This family is a subset of the hyperexponential (H2) distributions (mixtures of two exponentials), which we refer to as degenerate hyperexponential distributions and denote by H∗2 . (The H∗2 distribution has been used previously to approximately capture the variability of job sizes in multi-server systems, e.g., [27,28].)\nDefinition 4.1. A random variable X distributed according to the H∗2 distribution with mean 1/µ and squared coefficient of variation (variance divided by the square of the mean) C2, denoted by H∗2 (µ ∗, p), is given by\nX ∼ {\n0 w.p. p exp(µ∗) w.p. 1 − p,\nwhere p = (C2 − 1)/(C2 + 1) and µ∗ = µ(1 − p).\nThe degenerate hyperexponential distribution is a relatively minor modification of the exponential distribution, but the modification provides an additional parameter, so that it can be used to represent a full range of variability in the job-size distribution, with a squared coefficient of variation C2 ranging from 1 to ∞. The next result shows that if the job sizes are drawn from an H∗2 distribution, then the steady-state queue-length distribution and the mean response time in the resulting M /H∗2 /K /JSQ/PS model depend only on the mean job size, and not on the remaining free parameter; i.e., we have insensitivity within this H∗2 class.\nTheorem 4.1. The queueing systems M /H∗2 ((1 − p)µ, p)/K /JSQ/PS and M /M(µ)/K /JSQ/PS (both with mean job size 1/µ) have identical steady-state queue-length distributions and mean steady-state response times. Moreover, the\nresponse-time distribution of the M /H∗2 ((1 − p)µ, p)/K /JSQ/PS system is a mixture of a unit point mass at 0, with probability p, and the response-time distribution of the M /M(µ)/K /JSQ/PS system multiplied by 1/(1 − p), with probability 1 − p.\nProof. The jobs with size 0 do not have to wait, since the servers are doing processor sharing. Therefore, with respect to the queue-length distribution, we have that:\nΠ M(λ)/H∗2 (µ ∗,p)/K /JSQ/PS n = Π M(λ(1−p))/M(µ(1−p))/K /JSQ/PS n (5)\n= Π M(λ)/M(µ)/K /JSQ/PSn . (6)\nFrom the perspective of response time, the response time of the p-proportion of zero-sized jobs is the deterministic distribution with mean 0, while the remaining (1 − p)-proportion of non-zero-sized jobs experience an M(λ(1 − p))/M(µ(1 − p))/K /JSQ/PS system. But the M(λ(1 − p))/M(µ(1 − p))/K /JSQ/PS system is the same as the M(λ)/M(µ)/K /JSQ/PS system seen on a slower time scale, slowed by a factor of 1/(1 − p). Thus the (1 − p)-proportion of non-zero-sized jobs experience a response time 1/(1 − p) times higher than that in an M(λ)/M(µ)/K /JSQ/PS system.'}, {'heading': '4.2. Near-insensitivity for all job-size distributions', 'text': 'The insensitivity of Section 4.1 is for very special job-size distributions. We will show that this insensitivity property does not extend exactly to other job-size distributions, but that it does for all practical purposes; i.e., we have near-insensitivity. To establish those conclusions, we simulated an M /G/K /JSQ/PS system with the following job-size distributions (all with mean 2, in increasing order of C2):\n1. Deterministic: point mass at 2 (variance = 0) 2. Erlang2: sum of two exponential random variables with mean 1 (variance = 2) 3. Exponential: exponential distribution with mean 2 (variance = 4) 4. Bimodal-1: (mean = 2, variance = 9)\nX = {\n1 w.p. 0.9 11 w.p. 0.1\n5. Weibull-1: Weibull with shape parameter = 0.5 and scale parameter = 1 (heavy-tailed, mean = 2, variance = 20) 6. Weibull-2: Weibull with shape parameter = 13 and scale parameter = 1 3 (heavy-tailed, mean = 2, variance = 76) 7. Bimodal-2: (mean = 2, variance = 99)\nX = {\n1 w.p. 0.99 101 w.p. 0.01.\nThe load was set at ρ = 0.9 and simulations were run for K = 2, 4, 8 and 16 servers. For each value of K and each distribution, the simulation was run 50 times, each run consisting of K × 107 departures. (These are long runs!) Statistics for completed requests were considered. Fig. 3 shows the 95% confidence intervals for the mean response time and second moment of queue length, for each service distribution and number of servers, K . The mean response time in Fig. 3 never deviates by more than 2% from the exponential case, regardless of the job-size distribution, and the deviation for the second moment of queue length is barely over 3%.'}, {'heading': '4.3. Intuition behind insensitivity results', 'text': 'In this section we provide additional support for the near-insensitivity of the M /G/K /JSQ/PS model, and for the SQA technique.\nOn first thought, one might assume that the near-insensitivity of the M /G/K /JSQ/PS model stems directly from the well-known insensitivity of the M /G/1/PS queue. This does not explain everything, since, the arrival process into an individual queue under JSQ is not Poisson.\nA more relevant piece of intuition is that insensitivity of the M /G/1/PS also extends to the (state-dependent) Mn /G/1/PS. While this fact is not well-known, a proof of this fact follows directly from general results on symmetric queues (processor sharing is a symmetric discipline); see Theorems 3.10 and 3.14 on pp. 78, 90 in Kelly [19].\nTheorem 4.2. Consider the Mn /G/1/PS model. The (time-stationary) steady-state distribution of the number in system is insensitive to the service-time distribution G beyond its mean. Moreover, conditional on there being n jobs in the system in stationarity, the n (unordered) remaining service times are i.i.d. with the equilibrium density.\nAlthough we have thus far always thought of SQA as being applied to the M /M /K /JSQ/PS queue, Theorem 4.2 provides justification for viewing SQA as being applied directly to an M /G/K /JSQ/PS server farm, reducing it to an'}, {'heading': 'C2 = 0 2.2379 0.9865 0.6931 0.6575 0.6605 0.6645 0.6678 0.6696 0.6722 0.6727', 'text': 'Mn /G/1/PS queue, which we now know is insensitive in G. That is still not the whole story however, because, as we will see in Section 7, other common routing policies for PS server farms, like Least-Work-Left (sending the job to the host with the least total work), or Round-Robin, do not exhibit near-insensitivity, although one might think that a similar argument could be applied to them.\nWhat seems to be unique about JSQ is that the conditional arrival rates, the λ(n)’s, derived from the server farm, are nearly insensitive to G, as we will see in Table 1. This fact allows us to write:\nM /G/K /JSQ/PS SQA ≈ M (G)n /G/1/PS ≈ M (M) n /G/1/PS = Mn /M /1/PS\nwhere M (G)n denotes the state-dependent arrival process in the case of general service times and M (M) n denotes the state-dependent arrival process for the exponential service times. This insensitivity of the conditional arrival rates seems related to the fact that the JSQ policy uses the number of jobs in queue for making decisions, as compared with the Least-Work-Left policy, for example.'}, {'heading': '5. The conditional arrival rates', 'text': 'The feasibility of the SQA method hinges on obtaining the conditional arrival rates λ(n), n ≥ 0, defined in (1). In this section we will derive closed-form approximations for these conditional arrival rates. Our results here draw on extensive simulation experiments in which we estimated these conditional arrival rates for a range of job-size distributions and other model parameters. Fortunately, we found remarkable regularity, greatly simplifying our task.\nFirst, we observed that the conditional arrival rates rapidly converge to a limiting value as n (the number of jobs at the queue) increases. Indeed, we found that\nλ(n) µ ≈ ρK for all n ≥ 3, (7)\nfor ρ ≤ 0.95. Simulations of the M /M /K /JSQ/FCFS model showed this approximation to be consistently within 2% of the actual values (provided that ρ is not too extreme, i.e., for 0.3 ≤ ρ ≤ 0.95). This fact is illustrated in Fig. 4 for the case of K = 2. We also prove this convergence in the limit for the case K = 2 in Theorem 5.1 below.\nTheorem 5.1. For the M(λ)/M(µ)/2/JSQ/PS system,\nlim n→∞ λ(n) µ = ρ2. (8)\nProof. The proof is presented in the Appendix. It relies closely on the paper of Adan et al. [2]. We believe that we can generalize the proof to any finite K , however we state it only for K = 2.\nObserve that it makes intuitive sense that λ(n), the average arrival rate into a designated queue conditioned on that queue having n jobs, should decrease as n is increased, because, if the designated queue has many jobs then it is likely that other queues have fewer jobs than itself. What is interesting is that the limit is reached so quickly.\nNext, consistent with the other near-insensitivity results, we observed that these conditional arrival rates also exhibit near-insensitivity; there is almost no dependence on the variability of the job-size distribution. This fact is illustrated in Table 1 for the case of K = 4, with hyperexponential job-size distributions having squared coefficient of variation ranging from 1 to 64, where r denotes the fraction of load made up by one branch of the hyperexponential (hence r = 0.5 denotes a hyperexponential with balanced load on its branches). The near-insensitivity of the λ(n)’s provides further justification for focusing on the special case of an exponential job-size distribution.\nBased on the key observation in (7), our task has been reduced to obtaining approximations for the first 3 conditional arrival rates: λ(0), λ(1) and λ(2). The following lemma, allows us to reduce our task further to just deriving two conditional arrival rates, λ(0) and λ(2), since λ(1) can be estimated from these, assuming the relation in (7).\nLemma 5.1. Under the approximating approximation of Eq. (7) for the M/M/K/JSQ/PS model, we obtain\nλ(1) = µ\n[ µ\nλ(0) ρ−ρK+1 (1−ρ) + ρ K\n− 1 ]\n1 + λ(2)/µ − ρK . (9)\nProof. Since all the servers are homogeneous, the time-average arrival rate into any one queue is λ/K = µρ. By Theorem 3.1, SQA is exact given the conditional arrival rates. Therefore, we can write the time-average arrival rate into any server as\nµρ = ∞∑\nn=0 Πnλ(n).\nBy Little’s law (focusing on the servers), 1 − Π0 = ρ. Using that with (7), we obtain\nµρ = (1 − ρ)λ(0) + (1 − ρ) λ(0) µ λ(1) + (1 − ρ) λ(0)λ(1) µ2 λ(2)\n+ ( ρ − (1 − ρ)\nλ(0) µ − (1 − ρ) λ(0)λ(1) µ2\n) ρK . (10)\nThis gives the desired approximation for λ(1).\nThe approximations for λ(2) and λ(0) were obtained empirically using MATLAB’s curve fitting toolbox (version 1.1.5), which uses a trust-region method for a nonlinear least-squares fit. For each value of load, ρ, we approximate λ(2) as a function of K by a simple exponential function of the form\nλ(2) ≈ µ(uρvKρ ). (11)\nEmpirical fit yields the following functions of ρ:\nuρ = c3ρ3 + c2ρ2 + c1ρ + c0 and vρ = c′2ρ 2 + c′1ρ + c ′ 0,\nwhere c3 = −0.29, c2 = 0.8822, c1 = −0.5349, and c0 = 1.0112, while c′2 = −0.1864, c ′ 1 = 1.195, and c′0 = −0.016.\nFor λ(0), we used a function with two exponential terms, namely,\nλ(0) ≈ µ(aρ − bρcKρ − dρe K ρ ) (12)\nwhere cρ, eρ < 1. The constant aρ in (12) is clearly the limit as K → ∞. The following lemma gives the value of this limit.\nLemma 5.2.\nlim K→∞ λ(0) µ = ρ 1 − ρ . (13)\nProof. For any value of ρ < 1, as the number of servers becomes large enough, there is a high probability that any arrival will find at least one server idle. Therefore, λ(i) ≈ 0 for i ≥ 1. Equating the expressions for time-average arrival rates into any queue,\n(1 − ρ)λ(0) = µρ or λ(0) µ = ρ 1 − ρ .\nThe remaining functions bρ , cρ , dρ , and eρ were determined empirically for 0.3 ≤ ρ ≤ 0.95; we did not have accurate enough simulations outside this range. The final functions are\nbρ = −0.0263ρ2 + 0.0054ρ + 0.1155\nρ2 − 1.939ρ + 0.9534\ncρ = −6.2973ρ4 + 14.3382ρ3 − 12.3532ρ2 + 6.2557ρ − 1.005 dρ = −226.1839ρ2 + 342.3814ρ + 10.2851\nρ3 − 146.2751ρ2 − 481.1256ρ + 599.9166\neρ = 0.4462ρ3 − 1.8317ρ2 + 2.4376ρ − 0.0512.'}, {'heading': '6. Evaluating the approximation', 'text': 'In this section we evaluate our SQA approximation for the M /G/K /JSQ/PS model, where the conditional arrival rates used in the SQA are the approximate ones derived in Section 5. Our approach is not exact even for the case of an exponential job-size distribution, because the conditional arrival rates are approximate. Therefore, we first evaluate our method for exponential job-size distributions in Section 6.1. Afterwards, we consider general job-size distributions in Section 6.2.'}, {'heading': '6.1. Exponential job sizes', 'text': 'Theorem 3.1 implies that SQA is exact if the conditional arrival rates are correct. In this section, we apply SQA with our approximate conditional arrival rates to determine the first two moments of queue lengths for exponential service requirements. The results are shown in Fig. 5, where N represents the queue length of a single queue in the server farm.\nFrom Fig. 5, it is difficult to see that the SQA method with our derived approximate conditional arrival rates exhibits any error at all, when compared with simulations. However, the error is actually <2% for mean queue length and <2.4% for the second moment of queue length, when the number of servers is up to K = 64 and ρ = 0.9. Given that we have exponential job sizes, this error is solely due to error in the approximation of the conditional arrival rates.\nLooking at Fig. 5, we see an interesting convergence in performance as K increases. If we denote by N the number of jobs at any designated queue in steady state, then we see that:\nlim K→∞ E [N ] = ρ.\nThis regularity occurs because, when ρ < 1 and the number of servers is allowed to increase, λ(0) → µρ/(1 − ρ) and λ(i) → 0 for any i > 0; see Lemma 5.2.'}, {'heading': '6.2. General job sizes', 'text': 'We now move on to the case of general job-size distributions. Fig. 6 shows the 95% confidence intervals for the first and second moment of queue length obtained from simulations of the original M /G/K /JSQ/PS server farm for the distributions mentioned in Section 4.2. Each plot also shows the results of the SQA approximation: the analysis of the Mn /G/1/PS system with the conditional arrival rates derived in Section 5. The results are also summarized in Tables 2 and 3.\nThe error is at most 2.6% for mean queue length, and at most 3.3% for the second moment of queue length when ρ = 0.9.'}, {'heading': '7. Comparison of JSQ with other routing policies', 'text': 'So far, we have only considered the commonly used JSQ routing policy. However, it is natural to wonder how good a routing policy JSQ is for PS server farms. In this section we show, via simulation, that it is unlikely that there is a routing policy which outperforms JSQ by more than about 10%. We also pose many interesting open problems regarding the optimality of JSQ.\nFig. 7 compares the performance of JSQ for a PS server farm with that of several other policies, via simulation, on a range of job-size distributions, defined in Section 4.2. The policies shown are:\nLeast-Work-Left (LWL)—Each job is assigned to the queue with the least total remaining work.\nJoin-Shortest-Queue (JSQ)—Each job is assigned to the queue with the fewest number of jobs. Ties are broken by flipping a fair coin.\nOPT-0—Each incoming job is assigned so as to minimize the mean response time for all jobs currently in the system, assuming that there are 0 future arrivals. Note that we are not being greedy from the perspective of the incoming job, but rather trying to minimize across all the jobs in the system. This policy is followed for each successive incoming arrival. The OPT-0 policy was introduced by Bonomi [5].\nObserve that policies OPT-0 and Least-Work-Left are both less practical than the other policies because they require knowledge of the job sizes.\nThere are many interesting things to see in Fig. 7. First, we note that OPT-0 is in fact the best routing policy across all job-size distributions of those policies shown. Also JSQ is very close to OPT-0, within no more than 10%. This is surprising because JSQ utilizes only the number of jobs at each queue, whereas OPT-0 uses the remaining sizes of all jobs and the size of the incoming job.\nFrom an insensitivity perspective, we see that that there are some policies, e.g., OPT-0 and JSQ, that are nearly insensitive to the job-size distribution, whereas other policies, e.g., LWL and RR, are highly sensitive to the job-size distribution. It is an interesting question whether there is some detectable common characteristic among those routing policies that are nearly insensitive to the job-size distribution under PS server farms. This is an important question in light of the fact that the empirical workloads in Web server farms are very variable.\nTurning to the question of optimality, note that the case of deterministic job sizes yields the lowest mean response times, as compared with other job-size distributions, and that all the three policies: RR, LWL, and OPT-0, yield the same performance for the case of deterministic job sizes—in fact, they behave identically on every sample path when the job-size distribution is deterministic. Conjecture 7.1 below hypothesizes that this value is the minimum response time possible across all policies and job-size distributions for PS farms.\nConjecture 7.1. For an M /G/K /R/PS system, where the job-size distribution has mean µ−1, we conjecture that setting G ≡ Deterministic(µ−1) and R ≡ RR results in the lowest possible mean response time, over all other pairs (G, R).\nConjecture 7.1 gives us a handle on evaluating the optimality of JSQ. Making use of the fact that JSQ is one of the policies that is nearly insensitive to the job-size distribution, by the above conjecture, it would suffice to compare the performance of JSQ under deterministic job sizes with RR under deterministic job sizes. Even under the narrowed scope of deterministic job sizes, the comparison between JSQ and RR is not obvious, because JSQ can differ from RR both in tie-breaks and non-tie-break situations. Hence there is much open work left to be done.'}, {'heading': '8. Conclusion', 'text': 'This paper has presented the first analysis of JSQ routing for PS server farms. Our analysis introduces many new ideas which we believe will be applicable in much more general settings. The first is the idea of a SingleQueue Approximation (SQA), whereby one designated queue in the farm can be analyzed in isolation from all the other queues, where a state-dependent arrival rate is used to, in some sense, capture the effect of the other queues. Understanding what these state-dependent arrival rates look like is also a very interesting topic that we introduce and study via analysis and simulation. Finally, and perhaps most interesting, is the notion of near-insensitivity, and the discovery that the M /G/K /JSQ/PS farm exhibits near-insensitivity to the job-size distribution, apart from the mean job size. This is particularly intriguing in light of the fact that so many other routing policies for PS server farms, like Least-Work-Left or Round-Robin, do not exhibit this near-insensitivity property. All of the above topics are studied carefully both via analysis and simulation across a wide range of job-size distributions. We end with a simulation study of different routing policies, leading us to pose several open questions regarding the near-optimality of JSQ routing. Additional experimental results will appear in an online supplement.'}, {'heading': 'Acknowledgements', 'text': 'VG and MHB are supported by the NSF Division of Computer and Network Systems, Grant CNS-0615262. WW is supported in part by the NSF Grant DMI-0457095.'}, {'heading': 'Appendix. Proof of Theorem 5.1', 'text': 'The proof follows directly from the work of Adan et al. [2] on using compensation approach to analyze the M /M /2/JSQ/FCFS queue and will use Lemmas A.1 and A.2 mentioned below. We begin by reviewing the notation. Let πm,n be the stationary probability that length of queue 1 is m and length of queue 2 is n. For m ≥ 0 and r ≥ 0, define qm,r as:\nqm,r = πm,m+r . (14)\nThat is, qm,r is the probability that queue 1 is the shorter queue and has m jobs and queue 2 has m + r jobs.\nLemma A.1 (Adan et al. [2]). The stationary probabilities qm,r for m ≥ 0 and r ≥ 1 are given by:\nqm,r = Cxm,r .\nThe normalization constant C is given by\nC = 2(1 − ρ2)(2 − ρ)\nρ(2 + ρ)\nand\nxm,r = ∞∑\ni=0\ndi (αmi + ciα m i+1)β r i (15)\nwhere αi , βi , ci and di ’s are given by the following recursion scheme:\nd0 = 1 α0 = ρ 2 β0 = ρ2\n2 + ρ\nαiαi+1 = 2ρβ2i βiβi+1 = α 2 i+1/(2ρ + αi+1)\nci = − αi+1 − βi\nαi − βi\ndi+1 = − (αi+1 + ρ)/βi+1 − (ρ + 1) (αi+1 + ρ)/βi − (ρ + 1) ci di .\nWe will use the following lemma to bound the infinite sum of Eq. (15) by a finite sum.\nLemma A.2. The infinite sum of xm,r (m ≥ 0, r ≥ 1) in Eq. (15) can be bounded by the following finite sums:\n(αm0 + c0α m 1 )β r 0 + d1(α m 1 + c1α m 2 )β r 1 = xm,r < xm,r < xm,r = (α m 0 + c0α m 1 )β r 0 . (16)\nProof. Let si = |di (αmi + ciα m i+1)β r i |. In [2] (Lemma 8), the authors prove that:\nsi+1 < Rsi\nwhere R = 4/(4 + 2ρ + ρ2) < 1. Also as a consequence of Lemma 1 of [2], di+1/di < 0. That is di alternate signs, d0 being defined to equal 1. Hence,\nxm,r = s0 − s1 + s2 − s3 + s4 − · · ·\n< s0 − s1 + Rs1 − s3 + Rs3 − · · ·\n= s0 − (1 − R)(s1 + s3 + · · ·) < s0 def = xm,r\nand,\nxm,r = s0 − s1 + s2 − s3 + s4 − s5 + · · ·\n> s0 − s1 + s2 − Rs2 + s4 − Rs4 + · · ·\n= s0 − s1 + (1 − R)(s2 + s4 + · · ·) > s0 − s1 def = xm,r .\nProof of Theorem 5.1. Let Πn be the stationary probability that there are n jobs in queue 1. Since we know that SQA is exact, we can express the conditional arrival rates, λ(n), as\nλ(n) = µ Πn+1 Πn = µ\n∞∑ i=0 πn+1,i\n∞∑ i=0 πn,i .\nLet xm,0 = C−1qm,0. Since for m > 0,\nqm,0 = 1\n1 + ρ (2ρqm−1,1 + qm,1) (17)\nwe also have the following bounds on xm,0: 1\n1 + ρ (2ρxm−1,1 + xm,1) = xm,0 < xm,0 < xm,0 = 11+ρ (2ρxm−1,1 + xm,1).\nExpressing π ’s in terms of the x’s gives us the following bounds on λ(n):\nλ(n) < λ(n) < λ(n) (18)\nwhere,\nλ(n) = µ\nxn+1,0 + ∞∑\ni=1 xn+1,i + n∑ j=0 x j,n+1− j\nxn,0 + ∞∑\ni=1 xn,i + n−1∑ j=0 x j,n− j\n(19)\nλ(n) = µ\nxn+1,0 + ∞∑\ni=1 xn+1,i + n∑ j=0 x j,n+1− j\nxn,0 + ∞∑\ni=1 xn,i + n−1∑ j=0 x j,n− j\n. (20)\nThe expression for λ(n) in (20) is obtained by upper bounding the numerator, Πn+1, and lower bounding the denominator, Πn . Doing the opposite gives λ(n) (19).\nTo prove the convergence of λ(n), we will prove that\nlim n→∞ λ(n) = lim n→∞\nλ(n) = µρ2.\nWe will first show the convergence of λ(n). Proof for λ(n) is similar. Now,\nλ(n) = µ\nxn+1,0 + ∞∑\ni=1 xn+1,i + n∑ j=0 x j,n+1− j\nxn,0 + ∞∑\ni=1 xn,i + n−1∑ j=0 x j,n− j\n= µ Sn+1\nSn + Tn (21)\nwhere,\nSi = β0 1 + ρ [2ρ(αi−10 + c0α i−1 1 ) + (α i 0 + c0α i 1)] + (α i 0 + c0α i 1) β0 1 − β0 + β0\n( αi0 − β i 0\nα0 − β0 + c0\nβ i0 − α i 1\nβ0 − α1\n)\nTi = d1\n[ β1\n1 + ρ [2ρ(αi−11 + c1α i−1 2 ) + (α i 1 + c1α i 2)] + (α i 1 + c1α i 2)\nβ1\n1 − β1 + β1\n( αi1 − β i 1\nα1 − β1 + c1\nβ i1 − α i 2\nβ1 − α2\n)] .\nDividing the numerator and denominator of (21) by αn−10 , taking limn→∞ and noting that α1 α0 < 1, α2 α0 < 1, β0 α0 < 1 and β1 α0 < 1:\nlim n→∞ λ(n) = µα0\nβ0 1+ρ [2ρ + α0] + α0 β0 1−β0 + β0\n( α0\nα0−β0 ) β0\n1+ρ [2ρ + α0] + α0 β0 1−β0 + β0\n( α0\nα0−β0 ) (22) = µα0\n= µρ2. (23)\nSimilarly,\nlim n→∞ λ(n) = lim n→∞\nµ Sn+1 + Tn+1\nSn = µρ2\nand hence convergence of λ(n) follows by convergence of its upper and lower bounds.'}]
