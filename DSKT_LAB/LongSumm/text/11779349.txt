id: SP:ee666e5c6c34892ba7f980ca734252f78b86eb68
title: Unifying Count-Based Exploration and Intrinsic Motivation
authors: [{'affiliations': [], 'name': 'Marc G. Bellemare'}, {'affiliations': [], 'name': 'Sriram Srinivasan'}, {'affiliations': [], 'name': 'Georg Ostrovski'}]
abstractText: We consider an agent’s uncertainty about its environment and the problem of generalizing this uncertainty across states. Specifically, we focus on the problem of exploration in non-tabular reinforcement learning. Drawing inspiration from the intrinsic motivation literature, we use density models to measure uncertainty, and propose a novel algorithm for deriving a pseudo-count from an arbitrary density model. This technique enables us to generalize count-based exploration algorithms to the non-tabular case. We apply our ideas to Atari 2600 games, providing sensible pseudo-counts from raw pixels. We transform these pseudo-counts into exploration bonuses and obtain significantly improved exploration in a number of hard games, including the infamously difficult MONTEZUMA’S REVENGE.
references: [{'authors': ['A.G. Barto'], 'title': 'Intrinsic motivation and reinforcement learning', 'venue': 'Intrinsically Motivated Learning in Natural and Artificial Systems, pages 17–47. Springer.', 'year': 2013}, {'authors': ['M. Bellemare', 'J. Veness', 'E. Talvitie'], 'title': 'Skip context tree switching', 'venue': 'Proceedings of the 31st International Conference on Machine Learning, pages 1458–1466.', 'year': 2014}, {'authors': ['M.G. Bellemare', 'Y. Naddaf', 'J. Veness', 'M. Bowling'], 'title': 'The Arcade Learning Environment: An evaluation platform for general agents', 'venue': 'Journal of Artificial Intelligence Research, 47:253–279.', 'year': 2013}, {'authors': ['M.G. Bellemare', 'G. Ostrovski', 'A. Guez', 'P.S. Thomas', 'R. Munos'], 'title': 'Increasing the action gap: New operators for reinforcement learning', 'venue': 'Proceedings of the 30th AAAI Conference on Artificial Intelligence.', 'year': 2016}, {'authors': ['D.P. Bertsekas', 'J.N. Tsitsiklis'], 'title': 'Neuro-Dynamic Programming', 'venue': 'Athena Scientific.', 'year': 1996}, {'authors': ['T.M. Cover', 'J.A. Thomas'], 'title': 'Elements of information theory', 'venue': 'John Wiley & Sons.', 'year': 1991}, {'authors': ['R. Houthooft', 'X. Chen', 'Y. Duan', 'J. Schulman', 'F. De Turck', 'P. Abbeel'], 'title': 'Variational information maximizing exploration', 'year': 2016}, {'authors': ['M. Hutter'], 'title': 'Sparse adaptive dirichlet-multinomial-like processes', 'venue': 'Proceedings of the Conference on Online Learning Theory.', 'year': 2013}, {'authors': ['Z.J. Kolter', 'A.Y. Ng'], 'title': 'Near-bayesian exploration in polynomial time', 'venue': 'Proceedings of the 26th International Conference on Machine Learning.', 'year': 2009}, {'authors': ['J. Leike', 'T. Lattimore', 'L. Orseau', 'M. Hutter'], 'title': 'Thompson sampling is asymptotically optimal in general environments', 'venue': 'Proceedings of the Conference on Uncertainty in Artificial Intelligence.', 'year': 2016}, {'authors': ['M. Lopes', 'T. Lang', 'M. Toussaint', 'Oudeyer', 'P.-Y.'], 'title': 'Exploration in model-based reinforcement learning by empirically estimating learning progress', 'venue': 'Advances in Neural Information Processing Systems', 'year': 2012}, {'authors': ['M.C. Machado', 'S. Srinivasan', 'M. Bowling'], 'title': 'Domain-independent optimistic initialization for reinforcement learning', 'venue': 'AAAI Workshop on Learning for General Competency in Video Games', 'year': 2015}, {'authors': ['V. Mnih', 'A.P. Badia', 'M. Mirza', 'A. Graves', 'T.P. Lillicrap', 'T. Harley', 'D. Silver', 'K. Kavukcuoglu'], 'title': 'Asynchronous methods for deep reinforcement learning', 'venue': 'Proceedings of the International Conference on Machine Learning.', 'year': 2016}, {'authors': ['V. Mnih', 'K. Kavukcuoglu', 'D. Silver', 'A.A. Rusu', 'J. Veness', 'M.G. Bellemare', 'A. Graves', 'M. Riedmiller', 'A.K. Fidjeland', 'G Ostrovski'], 'title': 'Human-level control through deep reinforcement learning', 'year': 2015}, {'authors': ['S. Mohamed', 'D.J. Rezende'], 'title': 'Variational information maximisation for intrinsically motivated reinforcement learning', 'venue': 'Advances in Neural Information Processing Systems 28.', 'year': 2015}, {'authors': ['Y. Ollivier'], 'title': 'Laplace’s rule of succession in information geometry', 'venue': 'arXiv preprint arXiv:1503.04304.', 'year': 2015}, {'authors': ['L. Orseau', 'T. Lattimore', 'M. Hutter'], 'title': 'Universal knowledge-seeking agents for stochastic environments', 'venue': 'Proceedings of the Conference on Algorithmic Learning Theory.', 'year': 2013}, {'authors': ['P. Oudeyer', 'F. Kaplan', 'V. Hafner'], 'title': 'Intrinsic motivation systems for autonomous mental development', 'venue': 'IEEE Transactions on Evolutionary Computation, 11(2):265–286.', 'year': 2007}, {'authors': ['J. Pazis', 'R. Parr'], 'title': 'Efficient PAC-optimal exploration in concurrent, continuous state MDPs with delayed updates', 'venue': 'Proceedings of the 30th AAAI Conference on Artificial Intelligence.', 'year': 2016}, {'authors': ['J. Schmidhuber'], 'title': 'A possibility for implementing curiosity and boredom in model-building neural controllers', 'venue': 'From animals to animats: proceedings of the first international conference on simulation of adaptive behavior.', 'year': 1991}, {'authors': ['J. Schmidhuber'], 'title': 'Driven by compression progress', 'venue': 'Knowledge-Based Intelligent Information and Engineering Systems. Springer.', 'year': 2008}, {'authors': ['S. Singh', 'A.G. Barto', 'N. Chentanez'], 'title': 'Intrinsically motivated reinforcement learning', 'venue': 'Advances in Neural Information Processing Systems 16.', 'year': 2004}, {'authors': ['B.C. Stadie', 'S. Levine', 'P. Abbeel'], 'title': 'Incentivizing exploration in reinforcement learning with deep predictive models. arXiv preprint arXiv:1507.00814', 'year': 2015}, {'authors': ['A.L. Strehl', 'M.L. Littman'], 'title': 'An analysis of model-based interval estimation for Markov decision processes', 'venue': 'Journal of Computer and System Sciences, 74(8):1309 – 1331.', 'year': 2008}, {'authors': ['A. Van den Oord', 'N. Kalchbrenner', 'K. Kavukcuoglu'], 'title': 'Pixel recurrent neural networks', 'venue': 'Proceedigns of the 33rd International Conference on Machine Learning.', 'year': 2016}, {'authors': ['H. van Hasselt', 'A. Guez', 'D. Silver'], 'title': 'Deep reinforcement learning with double Q-learning', 'venue': 'In Proceedings of the 30th AAAI Conference on Artificial Intelligence', 'year': 2016}, {'authors': ['J. Veness', 'M.G. Bellemare', 'M. Hutter', 'A. Chua', 'G. Desjardins'], 'title': 'Compress and control', 'venue': 'Proceedings of the 29th AAAI Conference on Artificial Intelligence.', 'year': 2015}, {'authors': ['M.J. Wainwright', 'M.I. Jordan'], 'title': 'Graphical models, exponential families, and variational inference', 'venue': 'Foundations and Trends in Machine Learning, 1(1-2):1–305.', 'year': 2008}, {'authors': ['Bellemare'], 'title': 'The CTS density model treats x ∈ X as a factored state, where each (i, j) pixel corresponds to a factor x . The parents of this factor are its upper-left neighbours', 'venue': 'i.e. pixels', 'year': 2015}, {'authors': ['Mnih'], 'title': 'Our implementation of A3C was along the lines', 'year': 2016}, {'authors': ['Bellemare'], 'title': 'For comparison, Table 2 also reports the deterministic + life loss setting also used in the literature. Anecdotally, we found that using the life loss signal, while helpful in achieving high scores in some games, is detrimental in MONTEZUMA’S REVENGE. Recall that the life loss signal was used by Mnih et al', 'year': 2016}]
sections: [{'heading': '1 Introduction', 'text': 'Exploration algorithms for Markov Decision Processes (MDPs) are typically concerned with reducing the agent’s uncertainty over the environment’s reward and transition functions. In a tabular setting, this uncertainty can be quantified using confidence intervals derived from Chernoff bounds, or inferred from a posterior over the environment parameters. In fact, both confidence intervals and posterior shrink as the inverse square root of the state-action visit count N(x, a), making this quantity fundamental to most theoretical results on exploration.\nCount-based exploration methods directly use visit counts to guide an agent’s behaviour towards reducing uncertainty. For example, Model-based Interval Estimation with Exploration Bonuses (MBIE-EB; Strehl and Littman, 2008) solves the augmented Bellman equation\nV (x) = max a∈A\n[ R̂(x, a) + γ EP̂ [V (x ′)] + βN(x, a)−1/2 ] ,\ninvolving the empirical reward R̂, the empirical transition function P̂ , and an exploration bonus proportional to N(x, a)−1/2. This bonus accounts for uncertainties in both transition and reward functions and enables a finite-time bound on the agent’s suboptimality.\nIn spite of their pleasant theoretical guarantees, count-based methods have not played a role in the contemporary successes of reinforcement learning (e.g. Mnih et al., 2015). Instead, most practical methods still rely on simple rules such as -greedy. The issue is that visit counts are not directly useful in large domains, where states are rarely visited more than once.\nAnswering a different scientific question, intrinsic motivation aims to provide qualitative guidance for exploration (Schmidhuber, 1991; Oudeyer et al., 2007; Barto, 2013). This guidance can be summarized as “explore what surprises you”. A typical approach guides the agent based on change\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nar X\niv :1\n60 6.\n01 86\n8v 2\n[ cs\n.A I]\n7 N\nov 2\nin prediction error, or learning progress. If en(A) is the error made by the agent at time n over some event A, and en+1(A) the same error after observing a new piece of information, then learning progress is\nen(A)− en+1(A).\nIntrinsic motivation methods are attractive as they remain applicable in the absence of the Markov property or the lack of a tabular representation, both of which are required by count-based algorithms. Yet the theoretical foundations of intrinsic motivation remain largely absent from the literature, which may explain its slow rate of adoption as a standard approach to exploration.\nIn this paper we provide formal evidence that intrinsic motivation and count-based exploration are but two sides of the same coin. Specifically, we consider a frequently used measure of learning progress, information gain (Cover and Thomas, 1991). Defined as the Kullback-Leibler divergence of a prior distribution from its posterior, information gain can be related to the confidence intervals used in count-based exploration. Our contribution is to propose a new quantity, the pseudo-count, which connects information-gain-as-learning-progress and count-based exploration.\nWe derive our pseudo-count from a density model over the state space. This is in departure from more traditional approaches to intrinsic motivation that consider learning progress with respect to a transition model. We expose the relationship between pseudo-counts, a variant of Schmidhuber’s compression progress we call prediction gain, and information gain. Combined to Kolter and Ng’s negative result on the frequentist suboptimality of Bayesian bonuses, our result highlights the theoretical advantages of pseudo-counts compared to many existing intrinsic motivation methods.\nThe pseudo-counts we introduce here are best thought of as “function approximation for exploration”. We bring them to bear on Atari 2600 games from the Arcade Learning Environment (Bellemare et al., 2013), focusing on games where myopic exploration fails. We extract our pseudo-counts from a simple density model and use them within a variant of MBIE-EB. We apply them to an experience replay setting and to an actor-critic setting, and find improved performance in both cases. Our approach produces dramatic progress on the reputedly most difficult Atari 2600 game, MONTEZUMA’S REVENGE: within a fraction of the training time, our agent explores a significant portion of the first level and obtains significantly higher scores than previously published agents.'}, {'heading': '2 Notation', 'text': 'We consider a countable state space X . We denote a sequence of length n from X by x1:n ∈ Xn, the set of finite sequences from X by X ∗, write x1:nx to mean the concatenation of x1:n and a state x ∈ X , and denote the empty sequence by . A model over X is a mapping from X ∗ to probability distributions over X . That is, for each x1:n ∈ Xn the model provides a probability distribution\nρn(x) := ρ(x ; x1:n).\nNote that we do not require ρn(x) to be strictly positive for all x and x1:n. When it is, however, we may understand ρn(x) to be the usual conditional probability ofXn+1 = x givenX1 . . . Xn = x1:n.\nWe will take particular interest in the empirical distribution µn derived from the sequence x1:n. If Nn(x) := N(x, x1:n) is the number of occurrences of a state x in the sequence x1:n, then\nµn(x) := µ(x ; x1:n) := Nn(x)\nn .\nWe call the Nn the empirical count function, or simply empirical count. The above notation extends to state-action spaces, and we write Nn(x, a) to explicitly refer to the number of occurrences of a state-action pair when the argument requires it. When x1:n is generated by an ergodic Markov chain, for example if we follow a fixed policy in a finite-state MDP, then the limit point of µn is the chain’s stationary distribution.\nIn our setting, a density model is any model that assumes states are independently (but not necessarily identically) distributed; a density model is thus a particular kind of generative model. We emphasize that a density model differs from a forward model, which takes into account the temporal relationship between successive states. Note that µn is itself a density model.'}, {'heading': '3 From Densities to Counts', 'text': 'In the introduction we argued that the visit countNn(x) (and consequently, Nn(x, a)) is not directly useful in practical settings, since states are rarely revisited. Specifically, Nn(x) is almost always zero and cannot help answer the question “How novel is this state?” Nor is the problem solved by a Bayesian approach: even variable-alphabet models (e.g. Hutter, 2013) must assign a small, diminishing probability to yet-unseen states. To estimate the uncertainty of an agent’s knowledge, we must instead look for a quantity which generalizes across states. Guided by ideas from the intrinsic motivation literature, we now derive such a quantity. We call it a pseudo-count as it extends the familiar notion from Bayesian estimation.'}, {'heading': '3.1 Pseudo-Counts and the Recoding Probability', 'text': 'We are given a density model ρ over X . This density model may be approximate, biased, or even inconsistent. We begin by introducing the recoding probability of a state x:\nρ′n(x) := ρ(x ; x1:nx).\nThis is the probability assigned to x by our density model after observing a new occurrence of x. The term “recoding” is inspired from the statistical compression literature, where coding costs are inversely related to probabilities (Cover and Thomas, 1991). When ρ admits a conditional probability distribution, ρ′n(x) = Prρ(Xn+2 = x |X1 . . . Xn = x1:n, Xn+1 = x). We now postulate two unknowns: a pseudo-count function N̂n(x), and a pseudo-count total n̂. We relate these two unknowns through two constraints:\nρn(x) = N̂n(x)\nn̂ ρ′n(x) =\nN̂n(x) + 1\nn̂+ 1 . (1)\nIn words: we require that, after observing one instance of x, the density model’s increase in prediction of that same x should correspond to a unit increase in pseudo-count. The pseudo-count itself is derived from solving the linear system (1):\nN̂n(x) = ρn(x)(1− ρ′n(x)) ρ′n(x)− ρn(x) = n̂ρn(x). (2)\nNote that the equations (1) yield N̂n(x) = 0 (with n̂ = ∞) when ρn(x) = ρ′n(x) = 0, and are inconsistent when ρn(x) < ρ′n(x) = 1. These cases may arise from poorly behaved density models, but are easily accounted for. From here onwards we will assume a consistent system of equations. Definition 1 (Learning-positive density model). A density model ρ is learning-positive if for all x1:n ∈ Xn and all x ∈ X , ρ′n(x) ≥ ρn(x).\nBy inspecting (2), we see that\n1. N̂n(x) ≥ 0 if and only if ρ is learning-positive; 2. N̂n(x) = 0 if and only if ρn(x) = 0; and\n3. N̂n(x) =∞ if and only if ρn(x) = ρ′n(x).\nIn many cases of interest, the pseudo-count N̂n(x) matches our intuition. If ρn = µn then N̂n = Nn. Similarly, if ρn is a Dirichlet estimator then N̂n recovers the usual notion of pseudo-count. More importantly, if the model generalizes across states then so do pseudo-counts.'}, {'heading': '3.2 Estimating the Frequency of a Salient Event in FREEWAY', 'text': 'As an illustrative example, we employ our method to estimate the number of occurrences of an infrequent event in the Atari 2600 video game FREEWAY (Figure 1, screenshot). We use the Arcade Learning Environment (Bellemare et al., 2013). We will demonstrate the following:\n1. Pseudo-counts are roughly zero for novel events,\n2. they exhibit credible magnitudes,\n3. they respect the ordering of state frequency,\n4. they grow linearly (on average) with real counts,\n5. they are robust in the presence of nonstationary data.\nThese properties suggest that pseudo-counts provide an appropriate generalized notion of visit counts in non-tabular settings.\nIn FREEWAY, the agent must navigate a chicken across a busy road. As our example, we consider estimating the number of times the chicken has reached the very top of the screen. As is the case for many Atari 2600 games, this naturally salient event is associated with an increase in score, which ALE translates into a positive reward. We may reasonably imagine that knowing how certain we are about this part of the environment is useful. After crossing, the chicken is teleported back to the bottom of the screen.\nTo highlight the robustness of our pseudo-count, we consider a nonstationary policy which waits for 250,000 frames, then applies the UP action for 250,000 frames, then waits, then goes UP again. The salient event only occurs during UP periods. It also occurs with the cars in different positions, thus requiring generalization. As a point of reference, we record the pseudo-counts for both the salient event and visits to the chicken’s start position.\nWe use a simplified, pixel-level version of the CTS model for Atari 2600 frames proposed by Bellemare et al. (2014), ignoring temporal dependencies. While the CTS model is rather impoverished in comparison to state-of-the-art density models for images (e.g. Van den Oord et al., 2016), its countbased nature results in extremely fast learning, making it an appealing candidate for exploration. Further details on the model may be found in the appendix.\nExamining the pseudo-counts depicted in Figure 1 confirms that they exhibit the desirable properties listed above. In particular, the pseudo-count is almost zero on the first occurrence of the salient event; it increases slightly during the 3rd period, since the salient and reference events share some common structure; throughout, it remains smaller than the reference pseudo-count. The linearity on average and robustness to nonstationarity are immediate from the graph. Note, however, that the pseudocounts are a fraction of the real visit counts (inasmuch as we can define “real”): by the end of the trial, the start position has been visited about 140,000 times, and the topmost part of the screen, 1285 times. Furthermore, the ratio of recorded pseudo-counts differs from the ratio of real counts. Both effects are quantifiable, as we shall show in Section 5.'}, {'heading': '4 The Connection to Intrinsic Motivation', 'text': 'Having argued that pseudo-counts appropriately generalize visit counts, we will now show that they are closely related to information gain, which is commonly used to quantify novelty or curiosity and consequently as an intrinsic reward. Information gain is defined in relation to a mixture model ξ over\na class of density modelsM. This model predicts according to a weighted combination fromM:\nξn(x) := ξ(x ; x1:n) := ∫ ρ∈M wn(ρ)ρ(x ; x1:n)dρ,\nwith wn(ρ) the posterior weight of ρ. This posterior is defined recursively, starting from a prior distribution w0 overM:\nwn+1(ρ) := wn(ρ, xn+1) wn(ρ, x) := wn(ρ)ρ(x ; x1:n)\nξn(x) . (3)\nInformation gain is then the Kullback-Leibler divergence from prior to posterior that results from observing x: IGn(x) := IG(x ; x1:n) := KL ( wn(·, x) ‖wn ) .\nComputing the information gain of a complex density model is often impractical, if not downright intractable. However, a quantity which we call the prediction gain provides us with a good approximation of the information gain. We define the prediction gain of a density model ρ (and in particular, ξ) as the difference between the recoding log-probability and log-probability of x:\nPGn(x) := log ρ′n(x)− log ρn(x). Prediction gain is nonnegative if and only if ρ is learning-positive. It is related to the pseudo-count:\nN̂n(x) ≈ ( ePGn(x) − 1 )−1 ,\nwith equality when ρ′n(x)→ 0. As the following theorem shows, prediction gain allows us to relate pseudo-count and information gain. Theorem 1. Consider a sequence x1:n ∈ Xn. Let ξ be a mixture model over a class of learningpositive modelsM. Let N̂n be the pseudo-count derived from ξ (Equation 2). For this model,\nIGn(x) ≤ PGn(x) ≤ N̂n(x)−1 and PGn(x) ≤ N̂n(x)−1/2.\nTheorem 1 suggests that using an exploration bonus proportional to N̂n(x)−1/2, similar to the MBIE-EB bonus, leads to a behaviour at least as exploratory as one derived from an information gain bonus. Since pseudo-counts correspond to empirical counts in the tabular setting, this approach also preserves known theoretical guarantees. In fact, we are confident pseudo-counts may be used to prove similar results in non-tabular settings.\nOn the other hand, it may be difficult to provide theoretical guarantees about existing bonus-based intrinsic motivation approaches. Kolter and Ng (2009) showed that no algorithm based on a bonus upper bounded by βNn(x)−1 for any β > 0 can guarantee PAC-MDP optimality. Again considering the tabular setting and combining their result to Theorem 1, we conclude that bonuses proportional to immediate information (or prediction) gain are insufficient for theoretically near-optimal exploration: to paraphrase Kolter and Ng, these methods produce explore too little in comparison to pseudo-count bonuses. By inspecting (2) we come to a similar negative conclusion for bonuses proportional to the L1 or L2 distance between ξ′n and ξn.\nUnlike many intrinsic motivation algorithms, pseudo-counts also do not rely on learning a forward (transition and/or reward) model. This point is especially important because a number of powerful density models for images exist (Van den Oord et al., 2016), and because optimality guarantees cannot in general exist for intrinsic motivation algorithms based on forward models.'}, {'heading': '5 Asymptotic Analysis', 'text': 'In this section we analyze the limiting behaviour of the ratio N̂n/Nn. We use this analysis to assert the consistency of pseudo-counts derived from tabular density models, i.e. models which maintain per-state visit counts. In the appendix we use the same result to bound the approximation error of pseudo-counts derived from directed graphical models, of which our CTS model is a special case. Consider a fixed, infinite sequence x1, x2, . . . fromX . We define the limit of a sequence of functions( f(x ; x1:n) : n ∈ N ) with respect to the length n of the subsequence x1:n. We additionally assume that the empirical distribution µn converges pointwise to a distribution µ, and write µ′n(x) for the recoding probability of x under µn. We begin with two assumptions on our density model.\nAssumption 1. The limits\n(a) r(x) := lim n→∞\nρn(x) µn(x) (b) ṙ(x) := lim n→∞ ρ′n(x)− ρn(x) µ′n(x)− µn(x)\nexist for all x; furthermore, ṙ(x) > 0.\nAssumption (a) states that ρ should eventually assign a probability to x proportional to the limiting empirical distribution µ(x). In particular there must be a state x for which r(x) < 1, unless ρn → µ. Assumption (b), on the other hand, imposes a restriction on the learning rate of ρ relative to µ’s. As both r(x) and µ(x) exist, Assumption 1 also implies that ρn(x) and ρ′n(x) have a common limit.\nTheorem 2. Under Assumption 1, the limit of the ratio of pseudo-counts N̂n(x) to empirical counts Nn(x) exists for all x. This limit is\nlim n→∞\nN̂n(x) Nn(x) = r(x) ṙ(x)\n( 1− µ(x)r(x)\n1− µ(x)\n) .\nThe model’s relative rate of change, whose convergence to ṙ(x) we require, plays an essential role in the ratio of pseudo- to empirical counts. To see this, consider a sequence (xn : n ∈ N) generated i.i.d. from a distribution µ over a finite state space, and a density model defined from a sequence of nonincreasing step-sizes (αn : n ∈ N):\nρn(x) = (1− αn)ρn−1(x) + αnI {xn = x} , with initial condition ρ0(x) = |X |−1. For αn = n−1, this density model is the empirical distribution. For αn = n−2/3, we may appeal to well-known results from stochastic approximation (e.g. Bertsekas and Tsitsiklis, 1996) and find that almost surely\nlim n→∞ ρn(x) = µ(x) but lim n→∞ ρ′n(x)− ρn(x) µ′n(x)− µn(x) =∞.\nSince µ′n(x) − µn(x) = n−1(1 − µ′n(x)), we may think of Assumption 1(b) as also requiring ρ to converge at a rate of Θ(1/n) for a comparison with the empirical count Nn to be meaningful. Note, however, that a density model that does not satisfy Assumption 1(b) may still yield useful (but incommensurable) pseudo-counts. Corollary 1. Let φ(x) > 0 with ∑ x∈X φ(x) <∞ and consider the count-based estimator\nρn(x) = Nn(x) + φ(x) n+ ∑ x′∈X φ(x ′) .'}, {'heading': 'If N̂n is the pseudo-count corresponding to ρn then N̂n(x)/Nn(x)→ 1 for all x with µ(x) > 0.', 'text': ''}, {'heading': '6 Empirical Evaluation', 'text': 'In this section we demonstrate the use of pseudo-counts to guide exploration. We return to the Arcade Learning Environment, now using the CTS model to generate an exploration bonus.'}, {'heading': '6.1 Exploration in Hard Atari 2600 Games', 'text': 'From 60 games available through the Arcade Learning Environment we selected five “hard” games, in the sense that an -greedy policy is inefficient at exploring them. We used a bonus of the form\nR+n (x, a) := β(N̂n(x) + 0.01) −1/2, (4)\nwhere β = 0.05 was selected from a coarse parameter sweep. We also compared our method to the optimistic initialization trick proposed by Machado et al. (2015). We trained our agents’ Q-functions with Double DQN (van Hasselt et al., 2016), with one important modification: we mixed the Double Q-Learning target with the Monte Carlo return. This modification led to improved results both with and without exploration bonuses (details in the appendix).\nFigure 2 depicts the result of our experiment, averaged across 5 trials. Although optimistic initialization helps in FREEWAY, it otherwise yields performance similar to DQN. By contrast, the\ncount-based exploration bonus enables us to make quick progress on a number of games, most dramatically in MONTEZUMA’S REVENGE and VENTURE.\nMONTEZUMA’S REVENGE is perhaps the hardest Atari 2600 game available through the ALE. The game is infamous for its hostile, unforgiving environment: the agent must navigate a number of different rooms, each filled with traps. Due to its sparse reward function, most published agents achieve an average score close to zero and completely fail to explore most of the 24 rooms that constitute the first level (Figure 3, top). By contrast, within 50 million frames our agent learns a policy which consistently navigates through 15 rooms (Figure 3, bottom). Our agent also achieves a score higher than anything previously reported, with one run consistently achieving 6600 points by 100 million frames (half the training samples used by Mnih et al. (2015)). We believe the success of our method in this game is a strong indicator of the usefulness of pseudo-counts for exploration.1'}, {'heading': '6.2 Exploration for Actor-Critic Methods', 'text': 'We next used our exploration bonuses in conjunction with the A3C (Asynchronous Advantage Actor-Critic) algorithm of Mnih et al. (2016). One appeal of actor-critic methods is their explicit separation of policy and Q-function parameters, which leads to a richer behaviour space. This very separation, however, often leads to deficient exploration: to produce any sensible results, the A3C policy must be regularized with an entropy cost. We trained A3C on 60 Atari 2600 games, with and without the exploration bonus (4). We refer to our augmented algorithm as A3C+. Full details and additional results may be found in the appendix.\nWe found that A3C fails to learn in 15 games, in the sense that the agent does not achieve a score 50% better than random. In comparison, there are only 10 games for which A3C+ fails to improve on the random agent; of these, 8 are games where DQN fails in the same sense. We normalized the two algorithms’ scores so that 0 and 1 are respectively the minimum and maximum of the random agent’s and A3C’s end-of-training score on a particular game. Figure 4 depicts the in-training median score for A3C and A3C+, along with 1st and 3rd quartile intervals. Not only does A3C+ achieve slightly superior median performance, but it also significantly outperforms A3C on at least a quarter of the games. This is particularly important given the large proportion of Atari 2600 games for which an -greedy policy is sufficient for exploration.'}, {'heading': '7 Related Work', 'text': 'Information-theoretic quantities have been repeatedly used to describe intrinsically motivated behaviour. Closely related to prediction gain is Schmidhuber (1991)’s notion of compression progress,\n1A video of our agent playing is available at https://youtu.be/0yI2wJ6F8r0.\nwhich equates novelty with an agent’s improvement in its ability to compress its past. More recently, Lopes et al. (2012) showed the relationship between time-averaged prediction gain and visit counts in a tabular setting; their result is a special case of Theorem 2. Orseau et al. (2013) demonstrated that maximizing the sum of future information gains does lead to optimal behaviour, even though maximizing immediate information gain does not (Section 4). Finally, there may be a connection between sequential normalized maximum likelihood estimators and our pseudo-count derivation (see e.g. Ollivier, 2015).\nIntrinsic motivation has also been studied in reinforcement learning proper, in particular in the context of discovering skills (Singh et al., 2004; Barto, 2013). Recently, Stadie et al. (2015) used a squared prediction error bonus for exploring in Atari 2600 games. Closest to our work is Houthooft et al. (2016)’s variational approach to intrinsic motivation, which is equivalent to a second order Taylor approximation to prediction gain. Mohamed and Rezende (2015) also considered a variational approach to the different problem of maximizing an agent’s ability to influence its environment.\nAside for Orseau et al.’s above-cited work, it is only recently that theoretical guarantees for exploration have emerged for non-tabular, stateful settings. We note Pazis and Parr (2016)’s PAC-MDP result for metric spaces and Leike et al. (2016)’s asymptotic analysis of Thompson sampling in general environments.'}, {'heading': '8 Future Directions', 'text': 'The last few years have seen tremendous advances in learning representations for reinforcement learning. Surprisingly, these advances have yet to carry over to the problem of exploration. In this paper, we reconciled counts, the fundamental unit of uncertainty, with prediction-based heuristics and intrinsic motivation. Combining our work with more ideas from deep learning and better density models seems a plausible avenue for quick progress in practical, efficient exploration. We now conclude by outlining a few research directions we believe are promising.\nInduced metric. We did not address the question of where the generalization comes from. Clearly, the choice of density model induces a particular metric over the state space. A better understanding of this metric should allow us to tailor the density model to the problem of exploration.\nCompatible value function. There may be a mismatch in the learning rates of the density model and the value function: DQN learns much more slowly than our CTS model. As such, it should be beneficial to design value functions compatible with density models (or vice-versa).\nThe continuous case. Although we focused here on countable state spaces, we can as easily define a pseudo-count in terms of probability density functions. At present it is unclear whether this provides us with the right notion of counts for continuous spaces.'}, {'heading': 'Acknowledgments', 'text': 'The authors would like to thank Laurent Orseau, Alex Graves, Joel Veness, Charles Blundell, Shakir Mohamed, Ivo Danihelka, Ian Osband, Matt Hoffman, Greg Wayne, Will Dabney, and Aäron van den Oord for their excellent feedback early and late in the writing, and Pierre-Yves Oudeyer and Yann Ollivier for pointing out additional connections to the literature.'}, {'heading': 'A The Connection to Intrinsic Motivation', 'text': 'The following provides an identity connecting information gain and prediction gain. Lemma 1. Consider a mixture model ξ over M with prediction gain PGn and information gain IGn, a fixed x ∈ X , and let w′n(x) := wn(ρ, x) be the posterior of ξ overM after observing x. Let w′′n(x) := w ′ n(ρ, x) be the same posterior after observing x a second time, and let PG ρ n(x) denote the prediction gain of ρ ∈M. Then PGn(x) = KL(w′n ‖wn) + KL(w′n ‖w′′n) = IGn(x) + KL(w′n ‖w′′n) + Ew′n [PG ρ n(x)] .\nIn particular, ifM is a class of non-adaptive models in the sense that ρn(x) = ρ(x) for all x1:n, then\nPGn(x) = KL(w′n ‖wn) + KL(w′n ‖w′′n) = IGn(x) + KL(w′n ‖w′′n).\nA model which is non-adaptive is also learning-positive in the sense of Definition 1. Many common mixture models, for example Dirichlet-multinomial estimators, are mixtures over non-adaptive models.\nProof. We rewrite the posterior update rule (3) to show that for any ρ ∈M and any x ∈ X ,\nξn(x) = ρn(x)wn(ρ)\nwn(ρ, x) .\nWrite Ew′n := Eρ∼w′n(·). Now\nPGn(x) = log ξ′n(x)\nξn(x) = Ew′n\n[ log ξ′n(x)\nξn(x) ] = Ew′n [ log w′n(ρ)\nw′′n(ρ)\nw′n(ρ)\nwn(ρ)\nρ′n(x)\nρn(x) ] = Ew′n [ log w′n(ρ)\nwn(ρ)\n] + Ew′n [ log w′n(ρ)\nw′′n(ρ)\n] + Ew′n [ log ρ′n(x)\nρn(x) ] = IGn(x) + KL(w′n ‖w′′n) + Ew′n [PG ρ n(x)] .\nThe second statement follows immediately.\nLemma 2. The functions f(x) := ex−1−x and g(x) := ex−1−x2 are nonnegative on x ∈ [0,∞).\nProof. The statement regarding f(x) follows directly from the Taylor expansion for ex. Now, the first derivative of g(x) is ex − 2x. It is clearly positive for x ≥ 1. For x ∈ [0, 1],\nex − 2x = ∞∑ i=0 xi i! − 2x ≥ 1− x ≥ 0.\nSince g(0) = 0, the second result follows.\nProof (Theorem 1). The inequality IGn(x) ≤ PGn(x) follows directly from Lemma 1, the nonnegativity of the Kullback-Leibler divergence, and the fact that all models inM are learning-positive. For the inequality PGn(x) ≤ N̂n(x)−1, we write\nN̂n(x) −1 = (1− ξ′n(x))−1 ξ′n(x)− ξn(x) ξn(x)\n= (1− ξ′n(x))−1 ( ξ′n(x) ξn(x) − 1 )\n(a) = (1− ξ′n(x))−1 ( ePGn(x) − 1 ) (b) ≥ ePGn(x) − 1 (c)\n≥ PGn(x), where (a) follows by definition of prediction gain, (b) from ξ′n(x) ∈ [0, 1), and (c) from Lemma 2. Using the second part of Lemma 2 in (c) yields the inequality N̂n(x)−1/2 ≥ PGn(x).'}, {'heading': 'B Asymptotic Analysis', 'text': 'We begin with a simple lemma which will prove useful throughout. Lemma 3. The rate of change of the empirical distribution, µ′n(x)− µn(x), is such that\nn ( µ′n(x)− µn(x) ) = 1− µ′n(x).\nProof. We expand the definition of µn and µ′n:\nn ( µ′n(x)− µn(x) ) = n\n[ Nn(x) + 1\nn+ 1 − Nn(x) n ] = [ n\nn+ 1\n( Nn(x) + 1 ) −Nn(x) ] = [ 1− Nn(x) + 1\nn+ 1 ] = 1− µ′n(x).\nUsing this lemma, we derive an asymptotic relationship between Nn and N̂n.\nProof (Theorem 2). We expand the definition of N̂n(x) and Nn(x):\nN̂n(x) Nn(x) = ρn(x)(1− ρ′n(x)) Nn(x)(ρ′n(x)− ρn(x))\n= ρn(x)(1− ρ′n(x))\nnµn(x)(ρ′n(x)− ρn(x))\n= ρn(x)(µ\n′ n(x)− µn(x)) µn(x)(ρ′n(x)− ρn(x)) 1− ρ′n(x) n(µ′n(x)− µn(x))\n= ρn(x)\nµn(x) µ′n(x)− µn(x) ρ′n(x)− ρn(x) 1− ρ′n(x) 1− µ′n(x) ,\nwith the last line following from Lemma 3. Under Assumption 1, all terms of the right-hand side converge as n→∞. Taking the limit on both sides,\nlim n→∞\nN̂n(x)\nNn(x)\n(a) =\nr(x) ṙ(x) lim n→∞ 1− ρ′n(x) 1− µ′n(x)\n(b) = r(x)\nṙ(x) 1− µ(x)r(x) 1− µ(x) ,\nwhere (a) is justified by the existence of the relevant limits and ṙ(x) > 0, and (b) follows from writing ρ′n(x) as µn(x)ρ ′ n(x)/µn(x), where all limits involved exist.\nB.1 Directed Graphical Models\nWe say that X is a factored state space if it is the Cartesian product of k subspaces, i.e. X := X1 × · · · × Xk. This factored structure allows us to construct approximate density models over X , for example by modelling the joint density as a product of marginals. We write the ith factor of a state x ∈ X as xi, and write the sequence of the ith factor across x1:n as xi1:n. We will show that directed graphical models (Wainwright and Jordan, 2008) satisfy Assumption 1. A directed graphical model describes a probability distribution over a factored state space. To the ith factor xi is associated a parent set π(i) ⊆ {1, . . . , i− 1}. Let xπ(i) denote the value of the factors in the parent set. The ith factor model is ρin(x i ; xπ(i)) := ρi(xi ; x1:n, x π(i)), with the understanding that ρi is allowed to make a different prediction for each value of xπ(i). The state x is assigned the joint probability\nρGM(x ; x1:n) := k∏ i=1 ρin(x i ; xπ(i)).\nCommon choices for ρin include the conditional empirical distribution and the Dirichlet estimator.\nProposition 1. Suppose that each factor model ρin converges to the conditional probability distribution µ(xi |xπ(i)) and that for each xi with µ(xi |xπ(i)),\nlim n→∞\nρi(xi ; x1:nx, x π(i))− ρi(xi ; x1:n, xπ(i))\nµ(xi ; x1:nx, xπ(i))− µ(xi ; x1:n, xπ(i)) = 1.\nThen for all x with µ(x) > 0, the density model ρGM satisfies Assumption 1 with\nr(x) =\n∏k i=1 µ(x\ni |xπ(i)) µ(x)\nand ṙ(x) =\n∑k i=1 ( 1− µ(xi |xπ(i)) )∏ j 6=i µ(x\nj |xπ(j)) 1− µ(x) .\nThe CTS density model used in our experiments is in fact a particular kind of induced graphical model. The result above thus describes how the pseudo-counts computed in Section 3.2 are asymptotically related to the empirical counts.\nProof. By hypothesis, ρin → µ(xi |xπ(i)). Combining this with µn(x)→ µ(x) > 0,\nr(x) = lim n→∞\nρDGM(x ; x1:n)\nµn(x)\n= lim n→∞\n∏k i=1 ρ i n(x i ; xπ(i))\nµn(x)\n=\n∏k i=1 µ(x\ni |xπ(i)) µ(x) .\nSimilarly,\nṙ(x) = lim n→∞ ρ′DGM(x ; x1:n)− ρDGM(x ; x1:n) µ′n(x)− µn(x)\n(a) = lim\nn→∞\n( ρ′DGM(x ; x1:n)− ρDGM(x ; x1:n) ) n\n1− µ′n(x)\n= lim n→∞\n( ρ′DGM(x ; x1:n)− ρDGM(x ; x1:n) ) n\n1− µ(x) ,\nwhere in (a) we used the identity n(µ′n(x)− µn(x)) = 1− µ′n(x) derived in the proof of Theorem 2. Now\nṙ(x) = (1− µ(x))−1 lim n→∞\n( ρ′DGM(x ; x1:n)− ρDGM(x ; x1:n) ) n\n= (1− µ(x))−1 lim n→∞ ( k∏ i=1 ρi(xi ; x1:nx, x π(i))− k∏ i=1 ρi(xi ; x1:n, x π(i)) ) n.\nLet ci := ρi(xi ; x1:n, xπ(i)) and c′i := ρ i(xi ; x1:nx, x π(i)). The difference of products above is( k∏ i=1 ρi(xi ; x1:nx, x π(i))− k∏ i=1 ρi(xi ; x1:n, x π(i)) ) = ( c′1c ′ 2 . . . c ′ k − c1c2 . . . ck ) = (c′1 − c1)(c′2 . . . c′k) + c1(c′2 . . . c′k − c2 . . . ck)\n= k∑ i=1 (c′i − ci) (∏ j<i cj )(∏ j>i c′j ) ,\nand\nṙ(x) = (1− µ(x))−1 lim n→∞ k∑ i=1 n(c′i − ci) (∏ j<i cj )(∏ j>i c′j ) .\nBy the hypothesis on the rate of change of ρi and the identity n ( µ(xi ; x1:nx, x π(i))− µ(xi ; x1:n, xπ(i)) ) = 1− µ(xi |xπ(i)), we have\nlim n→∞\nn(c′i − ci) = 1− µ(xi |xπ(i)).\nSince the limits of c′i and ci are both µ(x i |xπ(i)), we deduce that\nṙ(x) =\n∑k i=1 ( 1− µ(xi |xπ(i) )∏ j 6=i µ(x\nj |xπj(x)) 1− µ(x) .\nNow, if µ(x) > 0 then also µ(xi ; xπ(i)) > 0 for each factor xi. Hence ṙ(x) > 0.\nB.2 Tabular Density Models (Corollary 1)\nWe shall prove the following, which includes Corollary 1 as a special case. Lemma 4. Consider φ : X × X ∗ → R+. Suppose that for all (xn : n ∈ N) and every x ∈ X\n1. lim n→∞ 1 n ∑ x∈X φ(x, x1:n) = 0, and\n2. lim n→∞\n( φ(x, x1:nx)− φ(x, x1:n) ) = 0.\nLet ρn(x) be the count-based estimator\nρn(x) = Nn(x) + φ(x, x1:n) n+ ∑ x∈X φ(x, x1:n) .'}, {'heading': 'If N̂n is the pseudo-count corresponding to ρn then N̂n(x)/Nn(x)→ 1 for all x with µ(x) > 0.', 'text': 'Condition 2 is satisfied if φn(x, x1:n) = un(x)φn with φn monotonically increasing in n (but not too quickly!) and un(x) converging to some distribution u(x) for all sequences (xn : n ∈ N). This is the case for most tabular density models.\nProof. We will show that the condition on the rate of change required by Proposition 1 is satisfied under the stated conditions. Let φn(x) := φ(x, x1:n), φ′n(x) := φ(x, x1:nx), φn := ∑ x∈X φn(x)\nand φ′n := ∑ x∈X φ ′ n(x). By hypothesis,\nρn(x) = Nn(x) + φn(x)\nn+ φn ρ′n(x) =\nNn(x) + φ ′ n(x) + 1\nn+ φ′n + 1 .\nNote that we do not require φn(x) = φ′n(x). Now\nρ′n(x)− ρn(x) = n+ φn n+ φn ρ′n(x)− ρn(x)\n= n+ 1 + φ′n n+ φn ρ′n(x)− ρn(x)− (1 + (φ′n − φn))ρ′n(x) n+ φn\n= 1\nn+ φn\n[ (Nn(x) + 1 + φ ′ n(x)− (Nn(x) + φn(x))− (1 + (φ′n − φn))ρ′n(x) ] = 1\nn+ φn\n[ 1− ρ′n(x) + ( φ′n(x)− φn(x) ) − ρ′n(x) ( φ′n − φn )] .\nUsing Lemma 3 we deduce that\nρ′n(x)− ρn(x) µ′n(x)− µn(x) = n n+ φn 1− ρ′n(x) + φ′n(x)− φn(x) + ρ′n(x)(φ′n − φn) 1− µ′n(x) .\nSince φn = ∑ x φn(x) and similarly for φ ′ n, then φ ′ n(x) − φn(x) → 0 pointwise implies that φ′n − φn → 0 also. For any µ(x) > 0,\n0 ≤ lim n→∞\nφn(x)\nNn(x)\n(a) ≤ lim n→∞\n∑ x∈X φn(x)\nNn(x)\n= lim n→∞\n∑ x∈X φn(x)\nn\nn\nNn(x)\n(b) = 0,\nwhere a) follows from φn(x) ≥ 0 and b) is justified by n/Nn(x)→ µ(x)−1 > 0 and the hypothesis that ∑ x∈X φn(x)/n→ 0. Therefore ρn(x)→ µ(x). Hence\nlim n→∞ ρ′n(x)− ρn(x) µ′n(x)− µn(x) = lim n→∞ n n+ φn 1− ρ′n(x) 1− µ′n(x) = 1.\nSince ρn(x)→ µ(x), we further deduce from Theorem 2 that\nlim n→∞\nN̂n(x) Nn(x) = 1.\nThe condition µ(x) > 0, which was also needed in Proposition 1, is necessary for the ratio to converge to 1: for example, if Nn(x) grows as O(log n) but φn(x) grows as O( √ n) (with |X | finite) then N̂n(x) will grow as the larger √ n.'}, {'heading': 'C Experimental Methods', 'text': 'C.1 CTS Density Model\nOur state space X is the set of all preprocessed Atari 2600 frames.2 Each raw frame is composed of 210×160 7-bit NTSC pixels (Bellemare et al., 2013). We preprocess these frames by first converting them to grayscale (luminance), then downsampling to 42×42 by averaging over pixel values (Figure 5).\nAside from this preprocessing, our model is very similar to the model used by Bellemare et al. (2014) and Veness et al. (2015). The CTS density model treats x ∈ X as a factored state, where each (i, j) pixel corresponds to a factor xi,j . The parents of this factor are its upper-left neighbours, i.e. pixels (i − 1, j), (i, j − 1), (i − 1, j − 1) and (i + 1, j − 1) (in this order). The probability of x is then the product of the probability assigned to its factors. Each factor is modelled using a location-dependent CTS model, which predicts the pixel’s colour value conditional on some, all, or possibly none, of the pixel’s parents (Figure 6).\n2Technically, the ALE is partially observable and a frame is an observation, not a state. In many games, however, the current frame is sufficiently informative to guide exploration.\nOriginal Frame (160x210) Downsampled,\n3-bit Greyscale (42x42)\nFigure 5: Sample preprocessed image provided to the CTS model (right), along with the original frame (left). Although details are lost, objects can still be made out.\nxi,j\nFigure 6: Depiction of the CTS “filter”. Each downsampled pixel is predicted by a location-specific model which can condition on the pixel’s immediate neighbours (in blue).\nC.2 A Taxonomy of Exploration\nWe provide in Table 1 a rough taxonomy of the Atari 2600 games available through the ALE in terms of the difficulty of exploration.\nWe first divided the games into two groups: those for which local exploration (e.g. -greedy) is sufficient to achieve a high scoring policy (easy), and those for which it is not (hard). For example, SPACE INVADERS versus PITFALL!. We further divided the easy group based on whether an -greedy scheme finds a score exploit, that is maximizes the score without achieving the game’s stated objective. For example, KUNG-FU MASTER versus BOXING. While this distinction is not directly used here, score exploits lead to behaviours which are optimal from an ALE perspective but uninteresting to humans. We divide the games in the hard category into dense reward games (MS. PAC-MAN) and sparse reward games (MONTEZUMA’S REVENGE).\nC.3 Exploration in MONTEZUMA’S REVENGE\nMONTEZUMA’S REVENGE is divided into three levels, each composed of 24 rooms arranged in a pyramidal shape (Figure 7). As discussed above, each room poses a number of challenges: to escape the very first room, the agent must climb ladders, dodge a creature, pick up a key, then backtrack to open one of two doors. The number of rooms reached by an agent is therefore a good measure of its ability. By accessing the game RAM, we recorded the location of the agent at each step during the course of training.3 We computed the visit count to each room, averaged over epochs each lasting one million frames. From this information we constructed a map of the agent’s “known world”, that is, all rooms visited at least once. The agent’s current room number ranges from 0 to 23 (Figure 7) and is stored at RAM location 0x83. Figure 8 shows the set of rooms explored by our DQN agents at different points during training.\nFigure 8 paints a clear picture: after 50 million frames, the agent using exploration bonuses has seen a total of 15 rooms, while the no-bonus agent has seen two. At that point in time, our agent achieves an average score of 2461; by 100 million frames, this figure stands at 3439, higher than anything previously reported. We believe the success of our method in this game is a strong indicator of the usefulness of pseudo-counts for exploration.\nWe remark that without mixing in the Monte-Carlo return, our bonus-based agent still explores significantly more than the no-bonus agent. However, the deep network seems unable to maintain a sufficiently good approximation to the value function, and performance quickly deteriorates. Comparable results using the A3C method provide another example of the practical importance of eligibility traces and return-based methods in reinforcement learning.\nC.4 Improving Exploration for Actor-Critic Methods\nOur implementation of A3C was along the lines mentioned in Mnih et al. (2016) and uses 16 threads. Each thread corresponds to an actor learner and maintains a copy of the density model. All the threads are synchronized with the master thread at regular intervals of 250,000 steps. We followed the same training procedure as that reported in the A3C paper with the following additional steps: We update our density model with the states generated by following the policy. During the policy gradient step, we compute the intrinsic rewards by querying the density model and add it to the extrinsic rewards before clipping them in the range [−1, 1] as was done in the A3C paper. This resulted in minimal overhead in computation costs and the memory footprint was manageable (< 32 GB) for most of the Atari games. Our training times were almost the same as the ones reported in the A3C paper. We picked β = 0.01 after performing a short parameter sweep over the training games. The choice of training games is the same as mentioned in the A3C paper.\nThe games on which DQN achieves a score of 150% or less of the random score are: ASTEROIDS, DOUBLE DUNK, GRAVITAR, ICE HOCKEY, MONTEZUMA’S REVENGE, PITFALL!, SKIING, SURROUND, TENNIS, TIME PILOT.\nThe games on which A3C achieves a score of 150% or less of the random score are: BATTLE ZONE, BOWLING, ENDURO, FREEWAY, GRAVITAR, KANGAROO, PITFALL!, ROBOTANK, SKIING, SOLARIS, SURROUND, TENNIS, TIME PILOT, VENTURE.\n3We emphasize that the game RAM is not made available to the agent, and is solely used here in our behavioural analysis.\nThe games on which A3C+ achieves a score of 150% or less of the random score are: DOUBLE DUNK, GRAVITAR, ICE HOCKEY, PITFALL!, SKIING, SOLARIS, SURROUND, TENNIS, TIME PILOT, VENTURE.\nOur experiments involved the stochastic version of the Arcade Learning Environment (ALE) without a terminal signal for life loss, which is now the default ALE setting. Briefly, the stochasticity is achieved by accepting the agent action at each frame with probability 1− p and using the agents previous action during rejection. We used the ALE’s default value of p = 0.25 as has been previously used in Bellemare et al. (2016). For comparison, Table 2 also reports the deterministic + life loss setting also used in the literature.\nAnecdotally, we found that using the life loss signal, while helpful in achieving high scores in some games, is detrimental in MONTEZUMA’S REVENGE. Recall that the life loss signal was used by Mnih et al. (2015) to treat each of the agent’ lives as a separate episode. For comparison, after 200 million frames A3C+ achieves the following average scores: 1) Stochastic + Life Loss: 142.50; 2) Deterministic + Life Loss: 273.70 3) Stochastic without Life Loss: 1127.05 4) Deterministic without Life Loss: 273.70. The maximum score achieved by 3) is 3600, in comparison to the maximum of 500 achieved by 1) and 3). This large discrepancy is not unsurprising when one considers that losing a life in MONTEZUMA’S REVENGE, and in fact in most games, is very different from restarting a new episode.\nC.5 Comparing Exploration Bonuses\nIn this section we compare the effect of using different exploration bonuses derived from our density model. We consider the following variants:\n• no exploration bonus, • N̂n(x)−1/2, as per MBIE-EB (Strehl and Littman, 2008); • N̂n(x)−1, as per BEB (Kolter and Ng, 2009); and • PGn(x), related to compression progress (Schmidhuber, 2008).\nThe exact form of these bonuses is analogous to (4). We compare these variants after 10, 50, 100, and 200 million frames of training, again in the A3C setup. To compare scores across 60 games, we use\ninter-algorithm score distributions (Bellemare et al., 2013). Inter-algorithm scores are normalized so that 0 corresponds to the worst score on a game, and 1, to the best. If g ∈ {1, . . . ,m} is a game and zg,a the inter-algorithm score on g for algorithm a, then the score distribution function is\nf(x) := |{g : zg,a ≥ x}|\nm .\nThe score distribution effectively depicts a kind of cumulative distribution, with a higher overall curve implying better scores across the gamut of Atari 2600 games. A higher curve at x = 1 implies top performance on more games; a higher curve at x = 0 indicates the algorithm does not perform poorly on many games. The scale parameter β was optimized to β = 0.01 for each variant separately.\nFigure 10 shows that, while prediction gain initially achieves strong performance, by 50 million frames all three algorithms perform equally well. By 200 million frames, the N̂−1/2 exploration bonus outperforms both prediction gain and no bonus. The prediction gain achieves a decent, but not top-performing score on all games. This matches our earlier argument that using prediction gain results in too little exploration. We hypothesize that the poor performance of the N̂−1 bonus stems from too abrupt a decay from a large to small intrinsic reward, although more experiments are needed. As a whole, these results show how using PG offers an advantage over the baseline A3C algorithm, which is furthered by using our count-based exploration bonus.'}]
